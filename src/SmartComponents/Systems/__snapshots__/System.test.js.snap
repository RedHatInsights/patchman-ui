// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Systems.js Should open remediation modal 1`] = `
{
  "isDisabled": false,
  "onClick": [Function],
  "title": "Apply all applicable advisories",
}
`;

exports[`Systems.js should match the snapshot 1`] = `
<Provider
  store={
    {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      location={
        {
          "hash": "",
          "key": "default",
          "pathname": "/",
          "search": "",
          "state": null,
        }
      }
      navigationType="POP"
      navigator={
        {
          "action": "POP",
          "createHref": [Function],
          "createURL": [Function],
          "encodeLocation": [Function],
          "go": [Function],
          "listen": [Function],
          "location": {
            "hash": "",
            "key": "default",
            "pathname": "/",
            "search": "",
            "state": null,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Systems>
        <Header
          headerOUIA="systems"
          title="Systems"
        >
          <PageHeader
            data-ouia-component-type="systems-page-header"
          >
            <section
              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
              data-ouia-component-type="systems-page-header"
              widget-type="InsightsPageHeader"
            >
              <Split
                hasGutter={true}
              >
                <div
                  className="pf-l-split pf-m-gutter"
                >
                  <SplitItem>
                    <div
                      className="pf-l-split__item"
                    >
                      <PageHeaderTitle
                        title="Systems"
                      >
                        <Title
                          className=""
                          headingLevel="h1"
                          size="2xl"
                          widget-type="InsightsPageHeaderTitle"
                        >
                          <h1
                            className="pf-c-title pf-m-2xl"
                            data-ouia-component-id="OUIA-Generated-Title-1"
                            data-ouia-component-type="PF4/Title"
                            data-ouia-safe={true}
                            widget-type="InsightsPageHeaderTitle"
                          >
                            Systems
                          </h1>
                        </Title>
                      </PageHeaderTitle>
                    </div>
                  </SplitItem>
                  <SplitItem
                    isFilled={true}
                  >
                    <div
                      className="pf-l-split__item pf-m-fill"
                    />
                  </SplitItem>
                  <SplitItem>
                    <div
                      className="pf-l-split__item"
                    />
                  </SplitItem>
                </div>
              </Split>
            </section>
          </PageHeader>
        </Header>
        <SystemsStatusReport
          apply={[Function]}
          queryParams={{}}
        >
          <Main
            style={
              {
                "paddingBottom": 0,
              }
            }
          >
            <section
              className="pf-l-page__main-section pf-c-page__main-section"
              style={
                {
                  "paddingBottom": 0,
                }
              }
            >
              <Grid
                hasGutter={true}
                span={12}
              >
                <div
                  className="pf-l-grid pf-m-all-12-col pf-m-gutter"
                >
                  <GridItem
                    lg={3}
                    md={4}
                  >
                    <div
                      className="pf-l-grid__item pf-m-4-col-on-md pf-m-3-col-on-lg"
                    >
                      <StatusCard
                        Icon={[Function]}
                        apply={[Function]}
                        color="var(--pf-global--success-color--100)"
                        filter={
                          {
                            "filter": {
                              "packages_updatable": "eq:0",
                            },
                          }
                        }
                        title="Systems up to date"
                      >
                        <Card
                          isCompact={true}
                          isFullHeight={true}
                        >
                          <article
                            className="pf-c-card pf-m-compact pf-m-full-height"
                            data-ouia-component-id="OUIA-Generated-Card-1"
                            data-ouia-component-type="PF4/Card"
                            data-ouia-safe={true}
                            id=""
                          >
                            <CardTitle
                              style={
                                {
                                  "marginTop": "0px",
                                }
                              }
                            >
                              <div
                                className="pf-c-card__title"
                                style={
                                  {
                                    "marginTop": "0px",
                                  }
                                }
                              >
                                Systems up to date
                              </div>
                            </CardTitle>
                            <CardBody
                              className="fonst-size-sm"
                            >
                              <div
                                className="pf-c-card__body fonst-size-sm"
                              >
                                <Flex
                                  flex={
                                    {
                                      "default": "inlineFlex",
                                    }
                                  }
                                  style={
                                    {
                                      "flexWrap": "nowrap",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-l-flex pf-m-inline-flex"
                                    style={
                                      {
                                        "flexWrap": "nowrap",
                                      }
                                    }
                                  >
                                    <FlexItem
                                      alignSelf={
                                        {
                                          "default": "alignSelfCenter",
                                        }
                                      }
                                      spacer={
                                        {
                                          "default": "spacerMd",
                                        }
                                      }
                                    >
                                      <div
                                        className="pf-m-spacer-md pf-m-align-self-center"
                                      >
                                        <CheckCircleIcon
                                          color="var(--pf-global--success-color--100)"
                                          noVerticalAlign={false}
                                          size="md"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="var(--pf-global--success-color--100)"
                                            height="1.5em"
                                            role="img"
                                            style={
                                              {
                                                "verticalAlign": "-0.1875em",
                                              }
                                            }
                                            viewBox="0 0 512 512"
                                            width="1.5em"
                                          >
                                            <path
                                              d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                                            />
                                          </svg>
                                        </CheckCircleIcon>
                                      </div>
                                    </FlexItem>
                                    <FlexItem
                                      spacer={
                                        {
                                          "default": "spacerNone",
                                        }
                                      }
                                    >
                                      <div
                                        className="pf-m-spacer-none"
                                      >
                                        <Skeleton
                                          width="24px"
                                        >
                                          <div
                                            className="pf-c-skeleton"
                                            style={
                                              {
                                                "--pf-c-skeleton--Height": undefined,
                                                "--pf-c-skeleton--Width": "24px",
                                              }
                                            }
                                          >
                                            <span
                                              className="pf-u-screen-reader"
                                            />
                                          </div>
                                        </Skeleton>
                                      </div>
                                    </FlexItem>
                                  </div>
                                </Flex>
                              </div>
                            </CardBody>
                          </article>
                        </Card>
                      </StatusCard>
                    </div>
                  </GridItem>
                  <GridItem
                    lg={3}
                    md={4}
                  >
                    <div
                      className="pf-l-grid__item pf-m-4-col-on-md pf-m-3-col-on-lg"
                    >
                      <StatusCard
                        Icon={[Function]}
                        apply={[Function]}
                        color="var(--pf-global--primary-color--100)"
                        filter={
                          {
                            "filter": {
                              "packages_updatable": "gt:0",
                            },
                          }
                        }
                        title="Systems with patches available"
                      >
                        <Card
                          isCompact={true}
                          isFullHeight={true}
                        >
                          <article
                            className="pf-c-card pf-m-compact pf-m-full-height"
                            data-ouia-component-id="OUIA-Generated-Card-2"
                            data-ouia-component-type="PF4/Card"
                            data-ouia-safe={true}
                            id=""
                          >
                            <CardTitle
                              style={
                                {
                                  "marginTop": "0px",
                                }
                              }
                            >
                              <div
                                className="pf-c-card__title"
                                style={
                                  {
                                    "marginTop": "0px",
                                  }
                                }
                              >
                                Systems with patches available
                              </div>
                            </CardTitle>
                            <CardBody
                              className="fonst-size-sm"
                            >
                              <div
                                className="pf-c-card__body fonst-size-sm"
                              >
                                <Flex
                                  flex={
                                    {
                                      "default": "inlineFlex",
                                    }
                                  }
                                  style={
                                    {
                                      "flexWrap": "nowrap",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-l-flex pf-m-inline-flex"
                                    style={
                                      {
                                        "flexWrap": "nowrap",
                                      }
                                    }
                                  >
                                    <FlexItem
                                      alignSelf={
                                        {
                                          "default": "alignSelfCenter",
                                        }
                                      }
                                      spacer={
                                        {
                                          "default": "spacerMd",
                                        }
                                      }
                                    >
                                      <div
                                        className="pf-m-spacer-md pf-m-align-self-center"
                                      >
                                        <PackageIcon
                                          color="var(--pf-global--primary-color--100)"
                                          noVerticalAlign={false}
                                          size="md"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="var(--pf-global--primary-color--100)"
                                            height="1.5em"
                                            role="img"
                                            style={
                                              {
                                                "verticalAlign": "-0.1875em",
                                              }
                                            }
                                            viewBox="0 0 1024 1024"
                                            width="1.5em"
                                          >
                                            <path
                                              d="M567.7,1010.49707 L951.5,818.498238 C994.7,796.698371 1024,752.39864 1024,703.998934 L1024,320.001265 C1024,271.601559 995.6,227.10183 952.2,205.501961 L568.6,13.5031267 C550.8,4.60318072 531.4,0.103208049 512,-0.00152855358 C492.3,-0.0967907365 472.5,4.40318194 454.4,13.5031267 L70.8,205.501961 C27.4,227.10183 0,271.50156 0,319.801267 L0.9,703.998934 C0.9,752.39864 28.3,796.79837 71.6,818.398239 L455.2,1010.39707 C464.3,1014.89705 488.1,1023.99699 511.9,1023.99699 C535.5,1023.99699 558.8,1014.99704 567.7,1010.49707 Z M512.5,630.899377 L672.5,550.899863 L672.5,645.29929 L736.5,613.299484 L736.5,518.900058 L896,438.900543 L896.5,712.698881 L512.5,904.697715 L512.5,630.899377 Z M145.1,304.101362 L294.9,228.60182 C295.3,228.801819 295.6,229.001818 296,229.201817 L661.9,412.300705 L512.5,487.600248 L145.1,304.101362 Z M512.5,118.902487 L881.3,301.701377 L733.1,376.400923 L366,192.702038 L512.5,118.902487 Z"
                                            />
                                          </svg>
                                        </PackageIcon>
                                      </div>
                                    </FlexItem>
                                    <FlexItem
                                      spacer={
                                        {
                                          "default": "spacerNone",
                                        }
                                      }
                                    >
                                      <div
                                        className="pf-m-spacer-none"
                                      >
                                        <Skeleton
                                          width="24px"
                                        >
                                          <div
                                            className="pf-c-skeleton"
                                            style={
                                              {
                                                "--pf-c-skeleton--Height": undefined,
                                                "--pf-c-skeleton--Width": "24px",
                                              }
                                            }
                                          >
                                            <span
                                              className="pf-u-screen-reader"
                                            />
                                          </div>
                                        </Skeleton>
                                      </div>
                                    </FlexItem>
                                  </div>
                                </Flex>
                              </div>
                            </CardBody>
                          </article>
                        </Card>
                      </StatusCard>
                    </div>
                  </GridItem>
                  <GridItem
                    lg={3}
                    md={4}
                  >
                    <div
                      className="pf-l-grid__item pf-m-4-col-on-md pf-m-3-col-on-lg"
                    >
                      <StatusCard
                        Icon={[Function]}
                        apply={[Function]}
                        color="var(--pf-global--warning-color--100)"
                        filter={
                          {
                            "filter": {
                              "stale": true,
                            },
                          }
                        }
                        title="Stale systems"
                      >
                        <Card
                          isCompact={true}
                          isFullHeight={true}
                        >
                          <article
                            className="pf-c-card pf-m-compact pf-m-full-height"
                            data-ouia-component-id="OUIA-Generated-Card-3"
                            data-ouia-component-type="PF4/Card"
                            data-ouia-safe={true}
                            id=""
                          >
                            <CardTitle
                              style={
                                {
                                  "marginTop": "0px",
                                }
                              }
                            >
                              <div
                                className="pf-c-card__title"
                                style={
                                  {
                                    "marginTop": "0px",
                                  }
                                }
                              >
                                Stale systems
                              </div>
                            </CardTitle>
                            <CardBody
                              className="fonst-size-sm"
                            >
                              <div
                                className="pf-c-card__body fonst-size-sm"
                              >
                                <Flex
                                  flex={
                                    {
                                      "default": "inlineFlex",
                                    }
                                  }
                                  style={
                                    {
                                      "flexWrap": "nowrap",
                                    }
                                  }
                                >
                                  <div
                                    className="pf-l-flex pf-m-inline-flex"
                                    style={
                                      {
                                        "flexWrap": "nowrap",
                                      }
                                    }
                                  >
                                    <FlexItem
                                      alignSelf={
                                        {
                                          "default": "alignSelfCenter",
                                        }
                                      }
                                      spacer={
                                        {
                                          "default": "spacerMd",
                                        }
                                      }
                                    >
                                      <div
                                        className="pf-m-spacer-md pf-m-align-self-center"
                                      >
                                        <ExclamationTriangleIcon
                                          color="var(--pf-global--warning-color--100)"
                                          noVerticalAlign={false}
                                          size="md"
                                        >
                                          <svg
                                            aria-hidden={true}
                                            aria-labelledby={null}
                                            fill="var(--pf-global--warning-color--100)"
                                            height="1.5em"
                                            role="img"
                                            style={
                                              {
                                                "verticalAlign": "-0.1875em",
                                              }
                                            }
                                            viewBox="0 0 576 512"
                                            width="1.5em"
                                          >
                                            <path
                                              d="M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                            />
                                          </svg>
                                        </ExclamationTriangleIcon>
                                      </div>
                                    </FlexItem>
                                    <FlexItem
                                      spacer={
                                        {
                                          "default": "spacerNone",
                                        }
                                      }
                                    >
                                      <div
                                        className="pf-m-spacer-none"
                                      >
                                        <Skeleton
                                          width="24px"
                                        >
                                          <div
                                            className="pf-c-skeleton"
                                            style={
                                              {
                                                "--pf-c-skeleton--Height": undefined,
                                                "--pf-c-skeleton--Width": "24px",
                                              }
                                            }
                                          >
                                            <span
                                              className="pf-u-screen-reader"
                                            />
                                          </div>
                                        </Skeleton>
                                      </div>
                                    </FlexItem>
                                  </div>
                                </Flex>
                              </div>
                            </CardBody>
                          </article>
                        </Card>
                      </StatusCard>
                    </div>
                  </GridItem>
                </div>
              </Grid>
            </section>
          </Main>
        </SystemsStatusReport>
        <PatchSetWrapper
          patchSetState={
            {
              "isAssignSystemsModalOpen": false,
              "isPatchSetWizardOpen": false,
              "isUnassignSystemsModalOpen": false,
              "shouldRefresh": false,
              "systemsIDs": [],
            }
          }
          setPatchSetState={[Function]}
        >
          <injectIntl(AssignSystemsModal)
            patchSetState={
              {
                "isAssignSystemsModalOpen": false,
                "isPatchSetWizardOpen": false,
                "isUnassignSystemsModalOpen": false,
                "shouldRefresh": false,
                "systemsIDs": [],
              }
            }
            setPatchSetState={[Function]}
            systemsIDs={[]}
          >
            <AssignSystemsModal
              intl={
                {
                  "$t": [Function],
                  "defaultFormats": {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "fallbackOnEmptyString": true,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": {},
                  "formatters": {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": {
                    "default.cancel": "Cancel",
                    "default.delete": "Delete",
                    "default.remove": "Remove",
                    "default.save": "Save",
                  },
                  "onError": [Function],
                  "onWarn": [Function],
                  "textComponent": Symbol(react.fragment),
                  "timeZone": undefined,
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
              patchSetState={
                {
                  "isAssignSystemsModalOpen": false,
                  "isPatchSetWizardOpen": false,
                  "isUnassignSystemsModalOpen": false,
                  "shouldRefresh": false,
                  "systemsIDs": [],
                }
              }
              setPatchSetState={[Function]}
              systemsIDs={[]}
            >
              <Modal
                actions={
                  [
                    <Button
                      isDisabled={true}
                      onClick={[Function]}
                    >
                      Apply template
                    </Button>,
                    <Button
                      onClick={[Function]}
                      variant="link"
                    >
                      Cancel
                    </Button>,
                  ]
                }
                appendTo={[Function]}
                aria-describedby=""
                aria-label=""
                aria-labelledby=""
                className=""
                hasNoBodyWrapper={false}
                isOpen={false}
                onClose={[Function]}
                ouiaSafe={true}
                showClose={true}
                title="Apply template"
                titleIconVariant={null}
                titleLabel=""
                variant="small"
              >
                <Portal
                  containerInfo={<div />}
                >
                  <ModalContent
                    actions={
                      [
                        <Button
                          isDisabled={true}
                          onClick={[Function]}
                        >
                          Apply template
                        </Button>,
                        <Button
                          onClick={[Function]}
                          variant="link"
                        >
                          Cancel
                        </Button>,
                      ]
                    }
                    aria-describedby=""
                    aria-label=""
                    aria-labelledby=""
                    boxId="pf-modal-part-0"
                    className=""
                    descriptorId="pf-modal-part-2"
                    hasNoBodyWrapper={false}
                    isOpen={false}
                    labelId="pf-modal-part-1"
                    onClose={[Function]}
                    ouiaId="OUIA-Generated-Modal-small-1"
                    ouiaSafe={true}
                    showClose={true}
                    title="Apply template"
                    titleIconVariant={null}
                    titleLabel=""
                    variant="small"
                  />
                </Portal>
              </Modal>
            </AssignSystemsModal>
          </injectIntl(AssignSystemsModal)>
        </PatchSetWrapper>
        <Main>
          <section
            className="pf-l-page__main-section pf-c-page__main-section"
          >
            <mockConstructor
              actionsConfig={
                {
                  "actions": [
                    <AsyncRemediationButton
                      isDisabled={false}
                      isLoading={false}
                      remediationProvider={[MockFunction]}
                    />,
                    {
                      "key": "assign-multiple-systems",
                      "label": "Assign to a template",
                      "onClick": [Function],
                      "props": {
                        "isDisabled": false,
                      },
                    },
                    {
                      "key": "remove-multiple-systems",
                      "label": "Remove from a template",
                      "onClick": [Function],
                      "props": {
                        "isDisabled": false,
                      },
                    },
                  ],
                }
              }
              activeFiltersConfig={
                {
                  "deleteTitle": "Reset filters",
                  "filters": [],
                  "onDelete": [Function],
                }
              }
              autoRefresh={true}
              bulkSelect={
                {
                  "checked": null,
                  "isDisabled": false,
                  "items": [
                    {
                      "onClick": [Function],
                      "title": "Select none (0)",
                    },
                    {
                      "onClick": [Function],
                      "title": "Select page (2)",
                    },
                    {
                      "onClick": [Function],
                      "title": "Select all (2)",
                    },
                  ],
                  "onSelect": [Function],
                  "toggleProps": {
                    "children": "     1 selected",
                    "data-ouia-component-type": "bulk-select-toggle-button",
                  },
                }
              }
              columns={[Function]}
              customFilters={
                {
                  "patchParams": {
                    "filter": undefined,
                    "search": undefined,
                    "selectedTags": undefined,
                    "systemProfile": undefined,
                  },
                }
              }
              exportConfig={
                {
                  "isDisabled": false,
                  "onSelect": [Function],
                }
              }
              filterConfig={
                {
                  "items": [
                    {
                      "filterValues": {
                        "aria-label": "search-field",
                        "onChange": [Function],
                        "placeholder": "Filter by name",
                        "value": undefined,
                      },
                      "label": "System",
                      "type": "text",
                    },
                    {
                      "filterValues": {
                        "items": [
                          {
                            "label": "Stale",
                            "value": "true",
                          },
                          {
                            "label": "Fresh",
                            "value": "false",
                          },
                        ],
                        "onChange": [Function],
                        "placeholder": "Filter by status",
                        "value": undefined,
                      },
                      "label": "Status",
                      "type": "checkbox",
                    },
                    {
                      "filterValues": {
                        "items": [
                          {
                            "label": "Systems up to date",
                            "value": "eq:0",
                          },
                          {
                            "label": "Systems with patches available",
                            "value": "gt:0",
                          },
                        ],
                        "onChange": [Function],
                        "placeholder": "Filter by patch status",
                        "value": undefined,
                      },
                      "label": "Patch status",
                      "type": "radio",
                    },
                  ],
                }
              }
              getEntities={[Function]}
              hideFilters={
                {
                  "all": true,
                  "hostGroupFilter": false,
                  "operatingSystem": false,
                  "tags": false,
                }
              }
              initialLoading={true}
              isFullView={true}
              onLoad={[Function]}
              paginationProps={
                {
                  "isDisabled": false,
                }
              }
              showTags={true}
              tableProps={
                {
                  "actionResolver": [Function],
                  "canSelectAll": false,
                  "className": "patchCompactInventory",
                  "isStickyHeader": true,
                  "variant": "compact",
                }
              }
            >
              <div
                className="testInventroyComponentChild"
              >
                <div>
                  This is child
                </div>
              </div>
            </mockConstructor>
          </section>
        </Main>
      </Systems>
    </Router>
  </BrowserRouter>
</Provider>
`;
