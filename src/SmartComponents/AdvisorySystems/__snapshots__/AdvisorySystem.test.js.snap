// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdvisorySystems.js Should match the snapshots and dispatch FETCH_AFFECTED_SYSTEMS only once 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
       
      <AdvisorySystems
        advisoryName="RHSA-2020:2755"
      >
        <Component />
        <mockConstructor
          actions={
            Array [
              Object {
                "onClick": [Function],
                "title": "Apply all applicable advisories",
              },
            ]
          }
          autoRefresh={true}
          customFilters={
            Object {
              "patchParams": Object {
                "filter": undefined,
                "search": undefined,
                "selectedTags": undefined,
                "systemProfile": undefined,
              },
            }
          }
          disableDefaultColumns={true}
          getEntities={[Function]}
          hideFilters={
            Object {
              "all": true,
            }
          }
          ignoreRefresh={true}
          initialLoading={true}
          isFullView={true}
          onLoad={[Function]}
          tableProps={
            Object {
              "canSelectAll": false,
              "className": "patchCompactInventory",
              "isStickyHeader": true,
              "variant": "compact",
            }
          }
        >
          <div
            className="testInventroyComponentChild"
          >
            <div>
              This is child
            </div>
          </div>
        </mockConstructor>
      </AdvisorySystems>
    </Router>
  </BrowserRouter>
</Provider>
`;
