// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Advisories.js Should match the snapshots 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(SystemAdvisories)>
        <SystemAdvisories
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <TableView
            apply={[Function]}
            columns={
              Array [
                Object {
                  "cellFormatters": Array [
                    [Function],
                  ],
                  "key": "id",
                  "title": "Name",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                Object {
                  "key": "public_date",
                  "title": "Publish date",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                Object {
                  "key": "advisory_type",
                  "title": "Type",
                  "transforms": Array [
                    [Function],
                    [Function],
                  ],
                },
                Object {
                  "key": "synopsis",
                  "title": "Synopsis",
                  "transforms": Array [
                    [Function],
                  ],
                },
              ]
            }
            emptyState={false}
            errorState={<Error />}
            filterConfig={
              Object {
                "items": Array [
                  Object {
                    "filterValues": Object {
                      "aria-label": "search-field",
                      "onChange": [Function],
                      "placeholder": "Search advisories",
                      "value": undefined,
                    },
                    "label": "Search",
                    "type": "text",
                  },
                  Object {
                    "filterValues": Object {
                      "items": Array [
                        Object {
                          "label": "Security",
                          "value": "3",
                        },
                        Object {
                          "label": "Bugfix",
                          "value": "2",
                        },
                        Object {
                          "label": "Enhancement",
                          "value": "1",
                        },
                      ],
                      "onChange": [Function],
                      "value": undefined,
                    },
                    "label": "Type",
                    "type": "checkbox",
                  },
                  Object {
                    "filterValues": Object {
                      "items": [MockFunction],
                      "onChange": [Function],
                      "value": undefined,
                    },
                    "label": "Publish date",
                    "type": "radio",
                  },
                ],
              }
            }
            onCollapse={[Function]}
            onPerPageSelect={[Function]}
            onSelect={[Function]}
            onSetPage={[Function]}
            onSort={[Function]}
            paginationOUIA="system-advisories-pagination"
            remediationButtonOUIA="toolbar-remediation-button"
            remediationProvider={[Function]}
            selectedRows={
              Object {
                "RHSA-2020:2774": true,
              }
            }
            sortBy={Object {}}
            store={
              Object {
                "metadata": Object {
                  "limit": 25,
                  "offset": 0,
                  "total_items": 10,
                },
                "queryParams": Object {},
                "rows": Array [
                  Object {
                    "cells": Array [
                      Object {
                        "title": <ForwardRef
                          to="/advisories/RHSA-2020:2774"
                        >
                          RHSA-2020:2774
                        </ForwardRef>,
                      },
                      Object {
                        "title": "30 June 2020",
                      },
                      Object {
                        "title": <AdvisoryType
                          type={3}
                        />,
                      },
                      "Important",
                    ],
                    "id": "RHSA-2020:2774",
                    "isOpen": false,
                    "selected": true,
                  },
                  Object {
                    "cells": Array [
                      Object {
                        "title": <DescriptionWithLink
                          row={
                            Object {
                              "attributes": Object {
                                "advisory_type": 3,
                                "description": "Kernel-based Virtual.",
                                "public_date": "2020-06-30T13:38:53Z",
                                "severity": 3,
                                "synopsis": "Important",
                              },
                              "id": "RHSA-2020:2774",
                              "type": "advisory",
                            }
                          }
                        />,
                      },
                    ],
                    "parent": 0,
                  },
                ],
                "status": "resolved",
              }
            }
            systemId="test"
            tableOUIA="system-advisories-table"
          >
            <PrimaryToolbar
              actionsConfig={
                Object {
                  "actions": Array [
                    <React.Fragment>
                      <Button
                        className="remediationButtonPatch"
                        isDisabled={false}
                        onClick={[Function]}
                        ouiaId="toolbar-remediation-button"
                      >
                        <AnsibeTowerIcon
                          color="#fff"
                          noVerticalAlign={false}
                          size="sm"
                        />
                        Â Remediate
                      </Button>
                      <Unknown />
                    </React.Fragment>,
                  ],
                }
              }
              activeFiltersConfig={
                Object {
                  "filters": Array [],
                  "onDelete": [Function],
                }
              }
              bulkSelect={
                Object {
                  "checked": null,
                  "count": 1,
                  "items": Array [
                    Object {
                      "onClick": [Function],
                      "title": "Select none (0)",
                    },
                    Object {
                      "onClick": [Function],
                      "title": "Select page (1)",
                    },
                    Object {
                      "onClick": [Function],
                      "title": "Select all (10)",
                    },
                  ],
                  "onSelect": [Function],
                  "toggleProps": Object {
                    "data-ouia-component-type": "bulk-select-toggle-button",
                  },
                }
              }
              exportConfig={
                Object {
                  "onSelect": undefined,
                }
              }
              filterConfig={
                Object {
                  "items": Array [
                    Object {
                      "filterValues": Object {
                        "aria-label": "search-field",
                        "onChange": [Function],
                        "placeholder": "Search advisories",
                        "value": undefined,
                      },
                      "label": "Search",
                      "type": "text",
                    },
                    Object {
                      "filterValues": Object {
                        "items": Array [
                          Object {
                            "label": "Security",
                            "value": "3",
                          },
                          Object {
                            "label": "Bugfix",
                            "value": "2",
                          },
                          Object {
                            "label": "Enhancement",
                            "value": "1",
                          },
                        ],
                        "onChange": [Function],
                        "value": undefined,
                      },
                      "label": "Type",
                      "type": "checkbox",
                    },
                    Object {
                      "filterValues": Object {
                        "items": [MockFunction],
                        "onChange": [Function],
                        "value": undefined,
                      },
                      "label": "Publish date",
                      "type": "radio",
                    },
                  ],
                }
              }
              pagination={
                Object {
                  "isCompact": true,
                  "itemCount": 10,
                  "onPerPageSelect": [Function],
                  "onSetPage": [Function],
                  "ouiaId": "top-system-advisories-pagination",
                  "page": 1,
                  "perPage": 25,
                }
              }
              toggleIsExpanded={[Function]}
            >
              <Toolbar
                className=" ins-c-primary-toolbar"
                id="ins-primary-data-toolbar"
                toggleIsExpanded={[Function]}
              >
                <div
                  className="pf-c-toolbar  ins-c-primary-toolbar"
                  id="ins-primary-data-toolbar"
                >
                  <ToolbarContent
                    isExpanded={false}
                    showClearFiltersButton={false}
                  >
                    <div
                      className="pf-c-toolbar__content"
                    >
                      <div
                        className="pf-c-toolbar__content-section"
                      >
                        <ForwardRef
                          className="ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                          variant="filter-group"
                        >
                          <ToolbarGroupWithRef
                            className="ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                            innerRef={null}
                            variant="filter-group"
                          >
                            <div
                              className="pf-c-toolbar__group pf-m-filter-group ins-c-primary-toolbar__group-filter pf-m-spacer-md pf-m-space-items-lg"
                            >
                              <ToolbarItem>
                                <div
                                  className="pf-c-toolbar__item"
                                >
                                  <BulkSelect
                                    checked={null}
                                    className=""
                                    count={1}
                                    isDisabled={false}
                                    items={
                                      Array [
                                        Object {
                                          "onClick": [Function],
                                          "title": "Select none (0)",
                                        },
                                        Object {
                                          "onClick": [Function],
                                          "title": "Select page (1)",
                                        },
                                        Object {
                                          "onClick": [Function],
                                          "title": "Select all (10)",
                                        },
                                      ]
                                    }
                                    onSelect={[Function]}
                                    toggleProps={
                                      Object {
                                        "data-ouia-component-type": "bulk-select-toggle-button",
                                      }
                                    }
                                  >
                                    <Dropdown
                                      className="ins-c-bulk-select"
                                      dropdownItems={
                                        Array [
                                          <DropdownItem
                                            className="ins-c-bulk-select__selected"
                                            isDisabled={true}
                                          >
                                            1
                                             Selected
                                          </DropdownItem>,
                                          <DropdownItem
                                            component="button"
                                            onClick={[Function]}
                                          >
                                            Select none (0)
                                          </DropdownItem>,
                                          <DropdownItem
                                            component="button"
                                            onClick={[Function]}
                                          >
                                            Select page (1)
                                          </DropdownItem>,
                                          <DropdownItem
                                            component="button"
                                            onClick={[Function]}
                                          >
                                            Select all (10)
                                          </DropdownItem>,
                                        ]
                                      }
                                      isOpen={false}
                                      onSelect={[Function]}
                                      toggle={
                                        <DropdownToggle
                                          data-ouia-component-type="bulk-select-toggle-button"
                                          isDisabled={false}
                                          onToggle={[Function]}
                                          splitButtonItems={
                                            Array [
                                              <React.Fragment>
                                                <DropdownToggleCheckbox
                                                  aria-label="Select all"
                                                  className=""
                                                  id="toggle-checkbox"
                                                  isChecked={null}
                                                  isDisabled={false}
                                                  isValid={true}
                                                  onChange={[Function]}
                                                >
                                                  1 selected
                                                </DropdownToggleCheckbox>
                                              </React.Fragment>,
                                            ]
                                          }
                                        />
                                      }
                                    >
                                      <DropdownWithContext
                                        autoFocus={true}
                                        className="ins-c-bulk-select"
                                        direction="down"
                                        dropdownItems={
                                          Array [
                                            <DropdownItem
                                              className="ins-c-bulk-select__selected"
                                              isDisabled={true}
                                            >
                                              1
                                               Selected
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Select none (0)
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Select page (1)
                                            </DropdownItem>,
                                            <DropdownItem
                                              component="button"
                                              onClick={[Function]}
                                            >
                                              Select all (10)
                                            </DropdownItem>,
                                          ]
                                        }
                                        isGrouped={false}
                                        isOpen={false}
                                        isPlain={false}
                                        menuAppendTo="inline"
                                        onSelect={[Function]}
                                        position="left"
                                        toggle={
                                          <DropdownToggle
                                            data-ouia-component-type="bulk-select-toggle-button"
                                            isDisabled={false}
                                            onToggle={[Function]}
                                            splitButtonItems={
                                              Array [
                                                <React.Fragment>
                                                  <DropdownToggleCheckbox
                                                    aria-label="Select all"
                                                    className=""
                                                    id="toggle-checkbox"
                                                    isChecked={null}
                                                    isDisabled={false}
                                                    isValid={true}
                                                    onChange={[Function]}
                                                  >
                                                    1 selected
                                                  </DropdownToggleCheckbox>
                                                </React.Fragment>,
                                              ]
                                            }
                                          />
                                        }
                                      >
                                        <div
                                          className="pf-c-dropdown ins-c-bulk-select"
                                          data-ouia-component-id={11}
                                          data-ouia-component-type="PF4/Dropdown"
                                          data-ouia-safe={true}
                                        >
                                          <DropdownToggle
                                            aria-haspopup={true}
                                            data-ouia-component-type="bulk-select-toggle-button"
                                            getMenuRef={[Function]}
                                            id="pf-dropdown-toggle-id-5"
                                            isDisabled={false}
                                            isOpen={false}
                                            isPlain={false}
                                            key=".0"
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-dropdown ins-c-bulk-select"
                                                  data-ouia-component-id="11"
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe="true"
                                                >
                                                  <div
                                                    class="pf-c-dropdown__toggle pf-m-split-button"
                                                  >
                                                    <label
                                                      class="pf-c-dropdown__toggle-check"
                                                      for="toggle-checkbox"
                                                    >
                                                      <input
                                                        aria-invalid="false"
                                                        aria-label="Select all"
                                                        id="toggle-checkbox"
                                                        type="checkbox"
                                                      />
                                                      <span
                                                        aria-hidden="true"
                                                        class="pf-c-dropdown__toggle-text"
                                                        id="toggle-checkbox-text"
                                                      >
                                                        1 selected
                                                      </span>
                                                    </label>
                                                    <button
                                                      aria-expanded="false"
                                                      aria-haspopup="true"
                                                      aria-label="Select"
                                                      class="pf-c-dropdown__toggle-button"
                                                      data-ouia-component-type="bulk-select-toggle-button"
                                                      id="pf-dropdown-toggle-id-5"
                                                      type="button"
                                                    >
                                                      <span
                                                        class=""
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 320 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                            transform=""
                                                          />
                                                        </svg>
                                                      </span>
                                                    </button>
                                                  </div>
                                                </div>,
                                              }
                                            }
                                            splitButtonItems={
                                              Array [
                                                <React.Fragment>
                                                  <DropdownToggleCheckbox
                                                    aria-label="Select all"
                                                    className=""
                                                    id="toggle-checkbox"
                                                    isChecked={null}
                                                    isDisabled={false}
                                                    isValid={true}
                                                    onChange={[Function]}
                                                  >
                                                    1 selected
                                                  </DropdownToggleCheckbox>
                                                </React.Fragment>,
                                              ]
                                            }
                                          >
                                            <div
                                              className="pf-c-dropdown__toggle pf-m-split-button"
                                            >
                                              <DropdownToggleCheckbox
                                                aria-label="Select all"
                                                className=""
                                                id="toggle-checkbox"
                                                isChecked={null}
                                                isDisabled={false}
                                                isValid={true}
                                                onChange={[Function]}
                                              >
                                                <label
                                                  className="pf-c-dropdown__toggle-check"
                                                  htmlFor="toggle-checkbox"
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    aria-label="Select all"
                                                    checked={null}
                                                    disabled={false}
                                                    id="toggle-checkbox"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <span
                                                    aria-hidden="true"
                                                    className="pf-c-dropdown__toggle-text"
                                                    id="toggle-checkbox-text"
                                                  >
                                                    1 selected
                                                  </span>
                                                </label>
                                              </DropdownToggleCheckbox>
                                              <Toggle
                                                aria-haspopup={true}
                                                aria-label="Select"
                                                bubbleEvent={false}
                                                className=""
                                                data-ouia-component-type="bulk-select-toggle-button"
                                                getMenuRef={[Function]}
                                                id="pf-dropdown-toggle-id-5"
                                                isActive={false}
                                                isDisabled={false}
                                                isOpen={false}
                                                isPlain={false}
                                                isPrimary={false}
                                                isSplitButton={true}
                                                onEnter={[Function]}
                                                onToggle={[Function]}
                                                parentRef={
                                                  Object {
                                                    "current": <div
                                                      class="pf-c-dropdown ins-c-bulk-select"
                                                      data-ouia-component-id="11"
                                                      data-ouia-component-type="PF4/Dropdown"
                                                      data-ouia-safe="true"
                                                    >
                                                      <div
                                                        class="pf-c-dropdown__toggle pf-m-split-button"
                                                      >
                                                        <label
                                                          class="pf-c-dropdown__toggle-check"
                                                          for="toggle-checkbox"
                                                        >
                                                          <input
                                                            aria-invalid="false"
                                                            aria-label="Select all"
                                                            id="toggle-checkbox"
                                                            type="checkbox"
                                                          />
                                                          <span
                                                            aria-hidden="true"
                                                            class="pf-c-dropdown__toggle-text"
                                                            id="toggle-checkbox-text"
                                                          >
                                                            1 selected
                                                          </span>
                                                        </label>
                                                        <button
                                                          aria-expanded="false"
                                                          aria-haspopup="true"
                                                          aria-label="Select"
                                                          class="pf-c-dropdown__toggle-button"
                                                          data-ouia-component-type="bulk-select-toggle-button"
                                                          id="pf-dropdown-toggle-id-5"
                                                          type="button"
                                                        >
                                                          <span
                                                            class=""
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              fill="currentColor"
                                                              height="1em"
                                                              role="img"
                                                              style="vertical-align: -0.125em;"
                                                              viewBox="0 0 320 512"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                transform=""
                                                              />
                                                            </svg>
                                                          </span>
                                                        </button>
                                                      </div>
                                                    </div>,
                                                  }
                                                }
                                              >
                                                <button
                                                  aria-expanded={false}
                                                  aria-haspopup={true}
                                                  aria-label="Select"
                                                  className="pf-c-dropdown__toggle-button"
                                                  data-ouia-component-type="bulk-select-toggle-button"
                                                  disabled={false}
                                                  id="pf-dropdown-toggle-id-5"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  type="button"
                                                >
                                                  <span
                                                    className=""
                                                  >
                                                    <CaretDownIcon
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 320 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </CaretDownIcon>
                                                  </span>
                                                </button>
                                              </Toggle>
                                            </div>
                                          </DropdownToggle>
                                        </div>
                                      </DropdownWithContext>
                                    </Dropdown>
                                  </BulkSelect>
                                </div>
                              </ToolbarItem>
                              <ToolbarItem
                                className="ins-c-primary-toolbar__filter"
                              >
                                <div
                                  className="pf-c-toolbar__item ins-c-primary-toolbar__filter"
                                >
                                  <ConditionalFilter
                                    hideLabel={false}
                                    id="default-input"
                                    isDisabled={false}
                                    items={
                                      Array [
                                        Object {
                                          "filterValues": Object {
                                            "aria-label": "search-field",
                                            "onChange": [Function],
                                            "placeholder": "Search advisories",
                                            "value": undefined,
                                          },
                                          "label": "Search",
                                          "type": "text",
                                        },
                                        Object {
                                          "filterValues": Object {
                                            "items": Array [
                                              Object {
                                                "label": "Security",
                                                "value": "3",
                                              },
                                              Object {
                                                "label": "Bugfix",
                                                "value": "2",
                                              },
                                              Object {
                                                "label": "Enhancement",
                                                "value": "1",
                                              },
                                            ],
                                            "onChange": [Function],
                                            "value": undefined,
                                          },
                                          "label": "Type",
                                          "type": "checkbox",
                                        },
                                        Object {
                                          "filterValues": Object {
                                            "items": [MockFunction],
                                            "onChange": [Function],
                                            "value": undefined,
                                          },
                                          "label": "Publish date",
                                          "type": "radio",
                                        },
                                      ]
                                    }
                                    value=""
                                  >
                                    <Split
                                      className="ins-c-conditional-filter"
                                    >
                                      <div
                                        className="pf-l-split ins-c-conditional-filter"
                                      >
                                        <SplitItem>
                                          <div
                                            className="pf-l-split__item"
                                          >
                                            <Dropdown
                                              className="ins-c-conditional-filter__group"
                                              dropdownItems={
                                                Array [
                                                  <DropdownItem
                                                    component="button"
                                                    isHovered={true}
                                                    onClick={[Function]}
                                                  >
                                                    Search
                                                  </DropdownItem>,
                                                  <DropdownItem
                                                    component="button"
                                                    isHovered={false}
                                                    onClick={[Function]}
                                                  >
                                                    Type
                                                  </DropdownItem>,
                                                  <DropdownItem
                                                    component="button"
                                                    isHovered={false}
                                                    onClick={[Function]}
                                                  >
                                                    Publish date
                                                  </DropdownItem>,
                                                ]
                                              }
                                              isOpen={false}
                                              onSelect={[Function]}
                                              toggle={
                                                <DropdownToggle
                                                  className=""
                                                  isDisabled={false}
                                                  onToggle={[Function]}
                                                >
                                                  <FilterIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  />
                                                  <span
                                                    className="ins-c-conditional-filter__value-selector"
                                                  >
                                                    Search
                                                  </span>
                                                </DropdownToggle>
                                              }
                                            >
                                              <DropdownWithContext
                                                autoFocus={true}
                                                className="ins-c-conditional-filter__group"
                                                direction="down"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      component="button"
                                                      isHovered={true}
                                                      onClick={[Function]}
                                                    >
                                                      Search
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      isHovered={false}
                                                      onClick={[Function]}
                                                    >
                                                      Type
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      component="button"
                                                      isHovered={false}
                                                      onClick={[Function]}
                                                    >
                                                      Publish date
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isGrouped={false}
                                                isOpen={false}
                                                isPlain={false}
                                                menuAppendTo="inline"
                                                onSelect={[Function]}
                                                position="left"
                                                toggle={
                                                  <DropdownToggle
                                                    className=""
                                                    isDisabled={false}
                                                    onToggle={[Function]}
                                                  >
                                                    <FilterIcon
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    />
                                                    <span
                                                      className="ins-c-conditional-filter__value-selector"
                                                    >
                                                      Search
                                                    </span>
                                                  </DropdownToggle>
                                                }
                                              >
                                                <div
                                                  className="pf-c-dropdown ins-c-conditional-filter__group"
                                                  data-ouia-component-id={12}
                                                  data-ouia-component-type="PF4/Dropdown"
                                                  data-ouia-safe={true}
                                                >
                                                  <DropdownToggle
                                                    aria-haspopup={true}
                                                    className=""
                                                    getMenuRef={[Function]}
                                                    id="pf-dropdown-toggle-id-6"
                                                    isDisabled={false}
                                                    isOpen={false}
                                                    isPlain={false}
                                                    key=".0"
                                                    onEnter={[Function]}
                                                    onToggle={[Function]}
                                                    parentRef={
                                                      Object {
                                                        "current": <div
                                                          class="pf-c-dropdown ins-c-conditional-filter__group"
                                                          data-ouia-component-id="12"
                                                          data-ouia-component-type="PF4/Dropdown"
                                                          data-ouia-safe="true"
                                                        >
                                                          <button
                                                            aria-expanded="false"
                                                            aria-haspopup="true"
                                                            class="pf-c-dropdown__toggle"
                                                            id="pf-dropdown-toggle-id-6"
                                                            type="button"
                                                          >
                                                            <span
                                                              class="pf-c-dropdown__toggle-text"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style="vertical-align: -0.125em;"
                                                                viewBox="0 0 512 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                                />
                                                              </svg>
                                                              <span
                                                                class="ins-c-conditional-filter__value-selector"
                                                              >
                                                                Search
                                                              </span>
                                                            </span>
                                                            <span
                                                              class="pf-c-dropdown__toggle-icon"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style="vertical-align: -0.125em;"
                                                                viewBox="0 0 320 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                  transform=""
                                                                />
                                                              </svg>
                                                            </span>
                                                          </button>
                                                        </div>,
                                                      }
                                                    }
                                                  >
                                                    <Toggle
                                                      aria-haspopup={true}
                                                      bubbleEvent={false}
                                                      className=""
                                                      getMenuRef={[Function]}
                                                      id="pf-dropdown-toggle-id-6"
                                                      isActive={false}
                                                      isDisabled={false}
                                                      isOpen={false}
                                                      isPlain={false}
                                                      isPrimary={false}
                                                      isSplitButton={false}
                                                      onEnter={[Function]}
                                                      onToggle={[Function]}
                                                      parentRef={
                                                        Object {
                                                          "current": <div
                                                            class="pf-c-dropdown ins-c-conditional-filter__group"
                                                            data-ouia-component-id="12"
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe="true"
                                                          >
                                                            <button
                                                              aria-expanded="false"
                                                              aria-haspopup="true"
                                                              class="pf-c-dropdown__toggle"
                                                              id="pf-dropdown-toggle-id-6"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="pf-c-dropdown__toggle-text"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style="vertical-align: -0.125em;"
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                                  />
                                                                </svg>
                                                                <span
                                                                  class="ins-c-conditional-filter__value-selector"
                                                                >
                                                                  Search
                                                                </span>
                                                              </span>
                                                              <span
                                                                class="pf-c-dropdown__toggle-icon"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style="vertical-align: -0.125em;"
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </span>
                                                            </button>
                                                          </div>,
                                                        }
                                                      }
                                                    >
                                                      <button
                                                        aria-expanded={false}
                                                        aria-haspopup={true}
                                                        className="pf-c-dropdown__toggle"
                                                        disabled={false}
                                                        id="pf-dropdown-toggle-id-6"
                                                        onClick={[Function]}
                                                        onKeyDown={[Function]}
                                                        type="button"
                                                      >
                                                        <span
                                                          className="pf-c-dropdown__toggle-text"
                                                        >
                                                          <FilterIcon
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              aria-labelledby={null}
                                                              fill="currentColor"
                                                              height="1em"
                                                              role="img"
                                                              style={
                                                                Object {
                                                                  "verticalAlign": "-0.125em",
                                                                }
                                                              }
                                                              viewBox="0 0 512 512"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                              />
                                                            </svg>
                                                          </FilterIcon>
                                                          <span
                                                            className="ins-c-conditional-filter__value-selector"
                                                          >
                                                            Search
                                                          </span>
                                                        </span>
                                                        <span
                                                          className="pf-c-dropdown__toggle-icon"
                                                        >
                                                          <CaretDownIcon
                                                            color="currentColor"
                                                            noVerticalAlign={false}
                                                            size="sm"
                                                          >
                                                            <svg
                                                              aria-hidden={true}
                                                              aria-labelledby={null}
                                                              fill="currentColor"
                                                              height="1em"
                                                              role="img"
                                                              style={
                                                                Object {
                                                                  "verticalAlign": "-0.125em",
                                                                }
                                                              }
                                                              viewBox="0 0 320 512"
                                                              width="1em"
                                                            >
                                                              <path
                                                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                transform=""
                                                              />
                                                            </svg>
                                                          </CaretDownIcon>
                                                        </span>
                                                      </button>
                                                    </Toggle>
                                                  </DropdownToggle>
                                                </div>
                                              </DropdownWithContext>
                                            </Dropdown>
                                          </div>
                                        </SplitItem>
                                        <SplitItem
                                          isFilled={true}
                                        >
                                          <div
                                            className="pf-l-split__item pf-m-fill"
                                          >
                                            <Text
                                              aria-label="search-field"
                                              isDisabled={false}
                                              onChange={[Function]}
                                              onSubmit={[Function]}
                                              placeholder="Search advisories"
                                              value=""
                                            >
                                              <ForwardRef
                                                aria-label="search-field"
                                                className="ins-c-conditional-filter "
                                                isDisabled={false}
                                                onChange={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Search advisories"
                                                value=""
                                                widget-type="InsightsInput"
                                              >
                                                <TextInputBase
                                                  aria-label="search-field"
                                                  className="ins-c-conditional-filter "
                                                  innerRef={null}
                                                  isDisabled={false}
                                                  isLeftTruncated={false}
                                                  isReadOnly={false}
                                                  isRequired={false}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="Search advisories"
                                                  type="text"
                                                  validated="default"
                                                  value=""
                                                  widget-type="InsightsInput"
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    aria-label="search-field"
                                                    className="pf-c-form-control ins-c-conditional-filter "
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    placeholder="Search advisories"
                                                    readOnly={false}
                                                    required={false}
                                                    type="text"
                                                    value=""
                                                    widget-type="InsightsInput"
                                                  />
                                                </TextInputBase>
                                              </ForwardRef>
                                              <SearchIcon
                                                className="ins-c-search-icon"
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="ins-c-search-icon"
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                                  />
                                                </svg>
                                              </SearchIcon>
                                            </Text>
                                          </div>
                                        </SplitItem>
                                      </div>
                                    </Split>
                                  </ConditionalFilter>
                                </div>
                              </ToolbarItem>
                            </div>
                          </ToolbarGroupWithRef>
                        </ForwardRef>
                        <Actions
                          actions={
                            Array [
                              <React.Fragment>
                                <Button
                                  className="remediationButtonPatch"
                                  isDisabled={false}
                                  onClick={[Function]}
                                  ouiaId="toolbar-remediation-button"
                                >
                                  <AnsibeTowerIcon
                                    color="#fff"
                                    noVerticalAlign={false}
                                    size="sm"
                                  />
                                  Â Remediate
                                </Button>
                                <Unknown />
                              </React.Fragment>,
                            ]
                          }
                          dropdownProps={Object {}}
                          exportConfig={
                            Object {
                              "onSelect": undefined,
                            }
                          }
                          onSelect={[Function]}
                          overflowActions={Array []}
                        >
                          <ToolbarItem
                            className="ins-c-primary-toolbar__first-action pf-m-spacer-sm"
                          >
                            <div
                              className="pf-c-toolbar__item ins-c-primary-toolbar__first-action pf-m-spacer-sm"
                            >
                              <Button
                                className="remediationButtonPatch"
                                isDisabled={false}
                                onClick={[Function]}
                                ouiaId="toolbar-remediation-button"
                              >
                                <button
                                  aria-disabled={false}
                                  aria-label={null}
                                  className="pf-c-button pf-m-primary remediationButtonPatch"
                                  data-ouia-component-id="toolbar-remediation-button"
                                  data-ouia-component-type="PF4/Button"
                                  data-ouia-safe={true}
                                  disabled={false}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <AnsibeTowerIcon
                                    color="#fff"
                                    noVerticalAlign={false}
                                    size="sm"
                                  >
                                    <svg
                                      aria-hidden={true}
                                      aria-labelledby={null}
                                      fill="#fff"
                                      height="1em"
                                      role="img"
                                      style={
                                        Object {
                                          "verticalAlign": "-0.125em",
                                        }
                                      }
                                      viewBox="20 20 390 390"
                                      width="1em"
                                    >
                                      <path
                                        d="M402.6,214.7c0,103.9-84.2,188.1-188.1,188.1c-103.9,0-188.1-84.2-188.1-188.1  c0-103.9,84.2-188.1,188.1-188.1C318.4,26.6,402.6,110.8,402.6,214.7z M304.1,289.3l-74.9-180.2c-2.1-5.2-6.4-7.9-11.6-7.9c-5.2,0-9.8,2.8-11.9,7.9l-82.2,197.7h28.1l32.5-81.5  l97.1,78.4c3.9,3.2,6.7,4.6,10.4,4.6c7.3,0,13.7-5.5,13.7-13.4C305.4,293.6,305,291.5,304.1,289.3z M217.7,141.5l48.7,120.2  l-73.5-57.9L217.7,141.5z"
                                      />
                                    </svg>
                                  </AnsibeTowerIcon>
                                  Â Remediate
                                </button>
                              </Button>
                              <Component />
                            </div>
                          </ToolbarItem>
                          <ToolbarItem
                            className="ins-m-actions--empty ins-c-primary-toolbar__actions pf-m-spacer-sm"
                          >
                            <div
                              className="pf-c-toolbar__item ins-m-actions--empty ins-c-primary-toolbar__actions pf-m-spacer-sm"
                            >
                              <Dropdown
                                dropdownItems={
                                  Array [
                                    <DropdownItem
                                      className="ins-c-primary-toolbar__first-action "
                                      component="div"
                                      onClick={[Function]}
                                    >
                                      <React.Fragment>
                                        <Button
                                          className="remediationButtonPatch"
                                          isDisabled={false}
                                          onClick={[Function]}
                                          ouiaId="toolbar-remediation-button"
                                        >
                                          <AnsibeTowerIcon
                                            color="#fff"
                                            noVerticalAlign={false}
                                            size="sm"
                                          />
                                          Â Remediate
                                        </Button>
                                        <Unknown />
                                      </React.Fragment>
                                    </DropdownItem>,
                                  ]
                                }
                                isOpen={false}
                                isPlain={true}
                                onSelect={[Function]}
                                toggle={
                                  <KebabToggle
                                    onToggle={[Function]}
                                  />
                                }
                              >
                                <DropdownWithContext
                                  autoFocus={true}
                                  className=""
                                  direction="down"
                                  dropdownItems={
                                    Array [
                                      <DropdownItem
                                        className="ins-c-primary-toolbar__first-action "
                                        component="div"
                                        onClick={[Function]}
                                      >
                                        <React.Fragment>
                                          <Button
                                            className="remediationButtonPatch"
                                            isDisabled={false}
                                            onClick={[Function]}
                                            ouiaId="toolbar-remediation-button"
                                          >
                                            <AnsibeTowerIcon
                                              color="#fff"
                                              noVerticalAlign={false}
                                              size="sm"
                                            />
                                            Â Remediate
                                          </Button>
                                          <Unknown />
                                        </React.Fragment>
                                      </DropdownItem>,
                                    ]
                                  }
                                  isGrouped={false}
                                  isOpen={false}
                                  isPlain={true}
                                  menuAppendTo="inline"
                                  onSelect={[Function]}
                                  position="left"
                                  toggle={
                                    <KebabToggle
                                      onToggle={[Function]}
                                    />
                                  }
                                >
                                  <div
                                    className="pf-c-dropdown"
                                    data-ouia-component-id={13}
                                    data-ouia-component-type="PF4/Dropdown"
                                    data-ouia-safe={true}
                                  >
                                    <KebabToggle
                                      aria-haspopup={true}
                                      getMenuRef={[Function]}
                                      id="pf-dropdown-toggle-id-7"
                                      isOpen={false}
                                      isPlain={true}
                                      key=".0"
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-dropdown"
                                            data-ouia-component-id="13"
                                            data-ouia-component-type="PF4/Dropdown"
                                            data-ouia-safe="true"
                                          >
                                            <button
                                              aria-expanded="false"
                                              aria-haspopup="true"
                                              aria-label="Actions"
                                              class="pf-c-dropdown__toggle pf-m-plain"
                                              id="pf-dropdown-toggle-id-7"
                                              type="button"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 192 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                  transform=""
                                                />
                                              </svg>
                                            </button>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Toggle
                                        aria-haspopup={true}
                                        aria-label="Actions"
                                        bubbleEvent={false}
                                        className=""
                                        getMenuRef={[Function]}
                                        id="pf-dropdown-toggle-id-7"
                                        isActive={false}
                                        isDisabled={false}
                                        isOpen={false}
                                        isPlain={true}
                                        isPrimary={false}
                                        isSplitButton={false}
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        parentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-dropdown"
                                              data-ouia-component-id="13"
                                              data-ouia-component-type="PF4/Dropdown"
                                              data-ouia-safe="true"
                                            >
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                aria-label="Actions"
                                                class="pf-c-dropdown__toggle pf-m-plain"
                                                id="pf-dropdown-toggle-id-7"
                                                type="button"
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style="vertical-align: -0.125em;"
                                                  viewBox="0 0 192 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </button>
                                            </div>,
                                          }
                                        }
                                      >
                                        <button
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          aria-label="Actions"
                                          className="pf-c-dropdown__toggle pf-m-plain"
                                          disabled={false}
                                          id="pf-dropdown-toggle-id-7"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          type="button"
                                        >
                                          <EllipsisVIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 192 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                transform=""
                                              />
                                            </svg>
                                          </EllipsisVIcon>
                                        </button>
                                      </Toggle>
                                    </KebabToggle>
                                  </div>
                                </DropdownWithContext>
                              </Dropdown>
                            </div>
                          </ToolbarItem>
                        </Actions>
                        <ToolbarItem
                          className="ins-c-primary-toolbar__pagination"
                        >
                          <div
                            className="pf-c-toolbar__item ins-c-primary-toolbar__pagination"
                          >
                            <Pagination
                              className=""
                              defaultToFullPage={false}
                              firstPage={1}
                              isCompact={true}
                              isDisabled={false}
                              itemCount={10}
                              itemsEnd={null}
                              itemsStart={null}
                              offset={0}
                              onFirstClick={[Function]}
                              onLastClick={[Function]}
                              onNextClick={[Function]}
                              onPageInput={[Function]}
                              onPerPageSelect={[Function]}
                              onPreviousClick={[Function]}
                              onSetPage={[Function]}
                              ouiaId="top-system-advisories-pagination"
                              ouiaSafe={true}
                              page={1}
                              perPage={25}
                              perPageOptions={
                                Array [
                                  Object {
                                    "title": "10",
                                    "value": 10,
                                  },
                                  Object {
                                    "title": "20",
                                    "value": 20,
                                  },
                                  Object {
                                    "title": "50",
                                    "value": 50,
                                  },
                                  Object {
                                    "title": "100",
                                    "value": 100,
                                  },
                                ]
                              }
                              titles={
                                Object {
                                  "currPage": "Current page",
                                  "items": "",
                                  "itemsPerPage": "Items per page",
                                  "optionsToggle": "Items per page",
                                  "page": "",
                                  "paginationTitle": "Pagination",
                                  "perPageSuffix": "per page",
                                  "toFirstPage": "Go to first page",
                                  "toLastPage": "Go to last page",
                                  "toNextPage": "Go to next page",
                                  "toPreviousPage": "Go to previous page",
                                }
                              }
                              toggleTemplate={[Function]}
                              variant="top"
                              widgetId="pagination-options-menu"
                            >
                              <div
                                className="pf-c-pagination pf-m-compact"
                                data-ouia-component-id="top-system-advisories-pagination"
                                data-ouia-component-type="PF4/Pagination"
                                data-ouia-safe={true}
                                id="pagination-options-menu-2"
                              >
                                <div
                                  className="pf-c-pagination__total-items"
                                >
                                  <ToggleTemplate
                                    firstIndex={1}
                                    itemCount={10}
                                    itemsTitle=""
                                    lastIndex={10}
                                  >
                                    <b>
                                      1
                                       - 
                                      10
                                    </b>
                                     
                                    of 
                                    <b>
                                      10
                                    </b>
                                     
                                  </ToggleTemplate>
                                </div>
                                <PaginationOptionsMenu
                                  className=""
                                  defaultToFullPage={false}
                                  dropDirection="down"
                                  firstIndex={1}
                                  isDisabled={false}
                                  itemCount={10}
                                  itemsPerPageTitle="Items per page"
                                  itemsTitle=""
                                  lastIndex={10}
                                  lastPage={1}
                                  onPerPageSelect={[Function]}
                                  optionsToggle="Items per page"
                                  page={1}
                                  perPage={25}
                                  perPageOptions={
                                    Array [
                                      Object {
                                        "title": "10",
                                        "value": 10,
                                      },
                                      Object {
                                        "title": "20",
                                        "value": 20,
                                      },
                                      Object {
                                        "title": "50",
                                        "value": 50,
                                      },
                                      Object {
                                        "title": "100",
                                        "value": 100,
                                      },
                                    ]
                                  }
                                  perPageSuffix="per page"
                                  toggleTemplate={[Function]}
                                  widgetId="pagination-options-menu"
                                >
                                  <DropdownWithContext
                                    autoFocus={true}
                                    className=""
                                    direction="down"
                                    dropdownItems={
                                      Array [
                                        <DropdownItem
                                          className=""
                                          component="button"
                                          data-action="per-page-10"
                                          onClick={[Function]}
                                        >
                                          10
                                           per page
                                        </DropdownItem>,
                                        <DropdownItem
                                          className=""
                                          component="button"
                                          data-action="per-page-20"
                                          onClick={[Function]}
                                        >
                                          20
                                           per page
                                        </DropdownItem>,
                                        <DropdownItem
                                          className=""
                                          component="button"
                                          data-action="per-page-50"
                                          onClick={[Function]}
                                        >
                                          50
                                           per page
                                        </DropdownItem>,
                                        <DropdownItem
                                          className=""
                                          component="button"
                                          data-action="per-page-100"
                                          onClick={[Function]}
                                        >
                                          100
                                           per page
                                        </DropdownItem>,
                                      ]
                                    }
                                    isGrouped={false}
                                    isOpen={false}
                                    isPlain={true}
                                    menuAppendTo="inline"
                                    onSelect={[Function]}
                                    position="left"
                                    toggle={
                                      <OptionsToggle
                                        firstIndex={1}
                                        isDisabled={false}
                                        isOpen={false}
                                        itemCount={10}
                                        itemsPerPageTitle="Items per page"
                                        itemsTitle=""
                                        lastIndex={10}
                                        onToggle={[Function]}
                                        optionsToggle="Items per page"
                                        parentRef={null}
                                        showToggle={true}
                                        toggleTemplate={[Function]}
                                        widgetId="pagination-options-menu"
                                      />
                                    }
                                  >
                                    <div
                                      className="pf-c-options-menu"
                                      data-ouia-component-id={14}
                                      data-ouia-component-type="PF4/PaginationOptionsMenu"
                                      data-ouia-safe={true}
                                    >
                                      <OptionsToggle
                                        aria-haspopup={true}
                                        firstIndex={1}
                                        getMenuRef={[Function]}
                                        id="pf-dropdown-toggle-id-8"
                                        isDisabled={false}
                                        isOpen={false}
                                        isPlain={true}
                                        itemCount={10}
                                        itemsPerPageTitle="Items per page"
                                        itemsTitle=""
                                        key=".0"
                                        lastIndex={10}
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        optionsToggle="Items per page"
                                        parentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-options-menu"
                                              data-ouia-component-id="14"
                                              data-ouia-component-type="PF4/PaginationOptionsMenu"
                                              data-ouia-safe="true"
                                            >
                                              <div
                                                class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                              >
                                                <span
                                                  class="pf-c-options-menu__toggle-text"
                                                >
                                                  <b>
                                                    1
                                                     - 
                                                    10
                                                  </b>
                                                   
                                                  of 
                                                  <b>
                                                    10
                                                  </b>
                                                   
                                                  
                                                </span>
                                                <button
                                                  aria-expanded="false"
                                                  aria-label="Items per page"
                                                  class="  pf-c-options-menu__toggle-button"
                                                  id="pagination-options-menu-toggle-2"
                                                  type="button"
                                                >
                                                  <span
                                                    class="pf-c-options-menu__toggle-button-icon"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 320 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>,
                                          }
                                        }
                                        showToggle={true}
                                        toggleTemplate={[Function]}
                                        widgetId="pagination-options-menu"
                                      >
                                        <div
                                          className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                        >
                                          <span
                                            className="pf-c-options-menu__toggle-text"
                                          >
                                            <ToggleTemplate
                                              firstIndex={1}
                                              itemCount={10}
                                              itemsTitle=""
                                              lastIndex={10}
                                            >
                                              <b>
                                                1
                                                 - 
                                                10
                                              </b>
                                               
                                              of 
                                              <b>
                                                10
                                              </b>
                                               
                                            </ToggleTemplate>
                                          </span>
                                          <DropdownToggle
                                            aria-label="Items per page"
                                            className="pf-c-options-menu__toggle-button"
                                            id="pagination-options-menu-toggle-2"
                                            isDisabled={false}
                                            isOpen={false}
                                            onEnter={[Function]}
                                            onToggle={[Function]}
                                            parentRef={
                                              Object {
                                                "current": <div
                                                  class="pf-c-options-menu"
                                                  data-ouia-component-id="14"
                                                  data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                  data-ouia-safe="true"
                                                >
                                                  <div
                                                    class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                                  >
                                                    <span
                                                      class="pf-c-options-menu__toggle-text"
                                                    >
                                                      <b>
                                                        1
                                                         - 
                                                        10
                                                      </b>
                                                       
                                                      of 
                                                      <b>
                                                        10
                                                      </b>
                                                       
                                                      
                                                    </span>
                                                    <button
                                                      aria-expanded="false"
                                                      aria-label="Items per page"
                                                      class="  pf-c-options-menu__toggle-button"
                                                      id="pagination-options-menu-toggle-2"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="pf-c-options-menu__toggle-button-icon"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style="vertical-align: -0.125em;"
                                                          viewBox="0 0 320 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                            transform=""
                                                          />
                                                        </svg>
                                                      </span>
                                                    </button>
                                                  </div>
                                                </div>,
                                              }
                                            }
                                          >
                                            <Toggle
                                              aria-label="Items per page"
                                              bubbleEvent={false}
                                              className="pf-c-options-menu__toggle-button"
                                              getMenuRef={null}
                                              id="pagination-options-menu-toggle-2"
                                              isActive={false}
                                              isDisabled={false}
                                              isOpen={false}
                                              isPlain={false}
                                              isPrimary={false}
                                              isSplitButton={false}
                                              onEnter={[Function]}
                                              onToggle={[Function]}
                                              parentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-options-menu"
                                                    data-ouia-component-id="14"
                                                    data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                    data-ouia-safe="true"
                                                  >
                                                    <div
                                                      class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                                    >
                                                      <span
                                                        class="pf-c-options-menu__toggle-text"
                                                      >
                                                        <b>
                                                          1
                                                           - 
                                                          10
                                                        </b>
                                                         
                                                        of 
                                                        <b>
                                                          10
                                                        </b>
                                                         
                                                        
                                                      </span>
                                                      <button
                                                        aria-expanded="false"
                                                        aria-label="Items per page"
                                                        class="  pf-c-options-menu__toggle-button"
                                                        id="pagination-options-menu-toggle-2"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="pf-c-options-menu__toggle-button-icon"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style="vertical-align: -0.125em;"
                                                            viewBox="0 0 320 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>,
                                                }
                                              }
                                            >
                                              <button
                                                aria-expanded={false}
                                                aria-label="Items per page"
                                                className="  pf-c-options-menu__toggle-button"
                                                disabled={false}
                                                id="pagination-options-menu-toggle-2"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                type="button"
                                              >
                                                <span
                                                  className="pf-c-options-menu__toggle-button-icon"
                                                >
                                                  <CaretDownIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 320 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </CaretDownIcon>
                                                </span>
                                              </button>
                                            </Toggle>
                                          </DropdownToggle>
                                        </div>
                                      </OptionsToggle>
                                    </div>
                                  </DropdownWithContext>
                                </PaginationOptionsMenu>
                                <Navigation
                                  className=""
                                  currPage="Current page"
                                  firstPage={1}
                                  isCompact={true}
                                  isDisabled={false}
                                  lastPage={1}
                                  onFirstClick={[Function]}
                                  onLastClick={[Function]}
                                  onNextClick={[Function]}
                                  onPageInput={[Function]}
                                  onPreviousClick={[Function]}
                                  onSetPage={[Function]}
                                  page={1}
                                  pagesTitle=""
                                  paginationTitle="Pagination"
                                  perPage={25}
                                  toFirstPage="Go to first page"
                                  toLastPage="Go to last page"
                                  toNextPage="Go to next page"
                                  toPreviousPage="Go to previous page"
                                >
                                  <nav
                                    aria-label="Pagination"
                                    className="pf-c-pagination__nav"
                                  >
                                    <div
                                      className="pf-c-pagination__nav-control"
                                    >
                                      <Button
                                        aria-label="Go to previous page"
                                        data-action="previous"
                                        isDisabled={true}
                                        onClick={[Function]}
                                        variant="plain"
                                      >
                                        <button
                                          aria-disabled={true}
                                          aria-label="Go to previous page"
                                          className="pf-c-button pf-m-plain pf-m-disabled"
                                          data-action="previous"
                                          data-ouia-component-id={15}
                                          data-ouia-component-type="PF4/Button"
                                          data-ouia-safe={true}
                                          disabled={true}
                                          onClick={[Function]}
                                          tabIndex={null}
                                          type="button"
                                        >
                                          <AngleLeftIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 256 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                                                transform=""
                                              />
                                            </svg>
                                          </AngleLeftIcon>
                                        </button>
                                      </Button>
                                    </div>
                                    <div
                                      className="pf-c-pagination__nav-control"
                                    >
                                      <Button
                                        aria-label="Go to next page"
                                        data-action="next"
                                        isDisabled={true}
                                        onClick={[Function]}
                                        variant="plain"
                                      >
                                        <button
                                          aria-disabled={true}
                                          aria-label="Go to next page"
                                          className="pf-c-button pf-m-plain pf-m-disabled"
                                          data-action="next"
                                          data-ouia-component-id={16}
                                          data-ouia-component-type="PF4/Button"
                                          data-ouia-safe={true}
                                          disabled={true}
                                          onClick={[Function]}
                                          tabIndex={null}
                                          type="button"
                                        >
                                          <AngleRightIcon
                                            color="currentColor"
                                            noVerticalAlign={false}
                                            size="sm"
                                          >
                                            <svg
                                              aria-hidden={true}
                                              aria-labelledby={null}
                                              fill="currentColor"
                                              height="1em"
                                              role="img"
                                              style={
                                                Object {
                                                  "verticalAlign": "-0.125em",
                                                }
                                              }
                                              viewBox="0 0 256 512"
                                              width="1em"
                                            >
                                              <path
                                                d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                transform=""
                                              />
                                            </svg>
                                          </AngleRightIcon>
                                        </button>
                                      </Button>
                                    </div>
                                  </nav>
                                </Navigation>
                              </div>
                            </Pagination>
                          </div>
                        </ToolbarItem>
                      </div>
                      <ToolbarExpandableContent
                        chipContainerRef={
                          Object {
                            "current": null,
                          }
                        }
                        clearFiltersButtonText="Clear all filters"
                        expandableContentRef={
                          Object {
                            "current": <div
                              class="pf-c-toolbar__expandable-content"
                              id="ins-primary-data-toolbar-expandable-content-1"
                            >
                              <div
                                class="pf-c-toolbar__group"
                              />
                            </div>,
                          }
                        }
                        id="ins-primary-data-toolbar-expandable-content-1"
                        isExpanded={false}
                        showClearFiltersButton={false}
                      >
                        <div
                          className="pf-c-toolbar__expandable-content"
                          id="ins-primary-data-toolbar-expandable-content-1"
                        >
                          <ForwardRef>
                            <ToolbarGroupWithRef
                              innerRef={null}
                            >
                              <div
                                className="pf-c-toolbar__group"
                              />
                            </ToolbarGroupWithRef>
                          </ForwardRef>
                        </div>
                      </ToolbarExpandableContent>
                    </div>
                  </ToolbarContent>
                  <ToolbarChipGroupContent
                    chipGroupContentRef={
                      Object {
                        "current": <div
                          class="pf-c-toolbar__content pf-m-hidden"
                          hidden=""
                        >
                          <div
                            class="pf-c-toolbar__group"
                          />
                        </div>,
                      }
                    }
                    clearFiltersButtonText="Clear all filters"
                    collapseListedFiltersBreakpoint="lg"
                    numberOfFilters={0}
                    showClearFiltersButton={false}
                  >
                    <div
                      className="pf-c-toolbar__content pf-m-hidden"
                      hidden={true}
                    >
                      <ForwardRef
                        className=""
                      >
                        <ToolbarGroupWithRef
                          className=""
                          innerRef={null}
                        >
                          <div
                            className="pf-c-toolbar__group"
                          />
                        </ToolbarGroupWithRef>
                      </ForwardRef>
                    </div>
                  </ToolbarChipGroupContent>
                </div>
              </Toolbar>
            </PrimaryToolbar>
            <Table
              aria-label="Patch table view"
              borders={true}
              canSelectAll={false}
              cells={
                Array [
                  Object {
                    "cellFormatters": Array [
                      [Function],
                    ],
                    "key": "id",
                    "title": "Name",
                    "transforms": Array [
                      [Function],
                      [Function],
                    ],
                  },
                  Object {
                    "key": "public_date",
                    "title": "Publish date",
                    "transforms": Array [
                      [Function],
                      [Function],
                    ],
                  },
                  Object {
                    "key": "advisory_type",
                    "title": "Type",
                    "transforms": Array [
                      [Function],
                      [Function],
                    ],
                  },
                  Object {
                    "key": "synopsis",
                    "title": "Synopsis",
                    "transforms": Array [
                      [Function],
                    ],
                  },
                ]
              }
              className=""
              contentId="expanded-content"
              dropdownDirection="down"
              dropdownPosition="right"
              expandId="expandable-toggle"
              gridBreakPoint="grid-md"
              isStickyHeader={false}
              onCollapse={[Function]}
              onSelect={[Function]}
              onSort={[Function]}
              ouiaId="system-advisories-table"
              ouiaSafe={true}
              role="grid"
              rowLabeledBy="simple-node"
              rows={
                Array [
                  Object {
                    "cells": Array [
                      Object {
                        "title": <ForwardRef
                          to="/advisories/RHSA-2020:2774"
                        >
                          RHSA-2020:2774
                        </ForwardRef>,
                      },
                      Object {
                        "title": "30 June 2020",
                      },
                      Object {
                        "title": <AdvisoryType
                          type={3}
                        />,
                      },
                      "Important",
                    ],
                    "id": "RHSA-2020:2774",
                    "isOpen": false,
                    "selected": true,
                  },
                  Object {
                    "cells": Array [
                      Object {
                        "title": <DescriptionWithLink
                          row={
                            Object {
                              "attributes": Object {
                                "advisory_type": 3,
                                "description": "Kernel-based Virtual.",
                                "public_date": "2020-06-30T13:38:53Z",
                                "severity": 3,
                                "synopsis": "Important",
                              },
                              "id": "RHSA-2020:2774",
                              "type": "advisory",
                            }
                          }
                        />,
                      },
                    ],
                    "parent": 0,
                  },
                ]
              }
              selectVariant="checkbox"
              sortBy={Object {}}
              variant={null}
            >
              <Provider
                aria-label="Patch table view"
                borders={true}
                className=""
                columns={
                  Array [
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": true,
                        "areActionsDisabled": undefined,
                        "canSelectAll": false,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 2,
                        "onCollapse": [Function],
                        "onExpand": undefined,
                        "onRowEdit": undefined,
                        "onSelect": [Function],
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-0",
                      "props": Object {
                        "data-key": 0,
                        "data-label": "",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": true,
                        "areActionsDisabled": undefined,
                        "canSelectAll": false,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 2,
                        "onCollapse": [Function],
                        "onExpand": undefined,
                        "onRowEdit": undefined,
                        "onSelect": [Function],
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "",
                        "transforms": Array [
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "column-1",
                      "props": Object {
                        "data-key": 1,
                        "data-label": "",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": true,
                        "areActionsDisabled": undefined,
                        "canSelectAll": false,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 2,
                        "onCollapse": [Function],
                        "onExpand": undefined,
                        "onRowEdit": undefined,
                        "onSelect": [Function],
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Name",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "name",
                      "props": Object {
                        "data-key": 2,
                        "data-label": "Name",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": true,
                        "areActionsDisabled": undefined,
                        "canSelectAll": false,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 2,
                        "onCollapse": [Function],
                        "onExpand": undefined,
                        "onRowEdit": undefined,
                        "onSelect": [Function],
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Publish date",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "publish-date",
                      "props": Object {
                        "data-key": 3,
                        "data-label": "Publish date",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": true,
                        "areActionsDisabled": undefined,
                        "canSelectAll": false,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 2,
                        "onCollapse": [Function],
                        "onExpand": undefined,
                        "onRowEdit": undefined,
                        "onSelect": [Function],
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Type",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "type",
                      "props": Object {
                        "data-key": 4,
                        "data-label": "Type",
                      },
                    },
                    Object {
                      "cell": Object {
                        "formatters": Array [
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "data": undefined,
                      "extraParams": Object {
                        "actionResolver": undefined,
                        "actions": undefined,
                        "allRowsSelected": true,
                        "areActionsDisabled": undefined,
                        "canSelectAll": false,
                        "contentId": "expanded-content",
                        "dropdownDirection": "down",
                        "dropdownPosition": "right",
                        "expandId": "expandable-toggle",
                        "firstUserColumnIndex": 2,
                        "onCollapse": [Function],
                        "onExpand": undefined,
                        "onRowEdit": undefined,
                        "onSelect": [Function],
                        "onSort": [Function],
                        "rowLabeledBy": "simple-node",
                        "selectVariant": "checkbox",
                        "sortBy": Object {},
                      },
                      "header": Object {
                        "formatters": Array [],
                        "label": "Synopsis",
                        "transforms": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                      },
                      "property": "synopsis",
                      "props": Object {
                        "data-key": 5,
                        "data-label": "Synopsis",
                      },
                    },
                  ]
                }
                gridBreakPoint="grid-md"
                isStickyHeader={false}
                ouiaId="system-advisories-table"
                ouiaSafe={true}
                renderers={
                  Object {
                    "body": Object {
                      "cell": [Function],
                      "row": [Function],
                      "wrapper": [Function],
                    },
                    "header": Object {
                      "cell": [Function],
                    },
                  }
                }
                role="grid"
                variant={null}
              >
                <TableComposable
                  aria-label="Patch table view"
                  borders={true}
                  className=""
                  gridBreakPoint="grid-md"
                  isStickyHeader={false}
                  ouiaId="system-advisories-table"
                  ouiaSafe={true}
                  role="grid"
                  variant={null}
                >
                  <TableComposableBase
                    aria-label="Patch table view"
                    borders={true}
                    className=""
                    gridBreakPoint="grid-md"
                    innerRef={null}
                    isStickyHeader={false}
                    ouiaId="system-advisories-table"
                    ouiaSafe={true}
                    role="grid"
                    variant={null}
                  >
                    <table
                      aria-label="Patch table view"
                      className="pf-c-table pf-m-grid-md"
                      data-ouia-component-id="system-advisories-table"
                      data-ouia-component-type="PF4/Table"
                      data-ouia-safe={true}
                      role="grid"
                    >
                      <TableHeader>
                        <ContextHeader
                          headerRows={null}
                        >
                          <Component
                            className=""
                            headerRows={null}
                          >
                            <BaseHeader
                              className=""
                              columns={
                                Array [
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "column-0",
                                    "props": Object {
                                      "data-key": 0,
                                      "data-label": "",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "column-1",
                                    "props": Object {
                                      "data-key": 1,
                                      "data-label": "",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Name",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "name",
                                    "props": Object {
                                      "data-key": 2,
                                      "data-label": "Name",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Publish date",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "publish-date",
                                    "props": Object {
                                      "data-key": 3,
                                      "data-label": "Publish date",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Type",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "type",
                                    "props": Object {
                                      "data-key": 4,
                                      "data-label": "Type",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Synopsis",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "synopsis",
                                    "props": Object {
                                      "data-key": 5,
                                      "data-label": "Synopsis",
                                    },
                                  },
                                ]
                              }
                              headerRows={null}
                              renderers={
                                Object {
                                  "body": Object {
                                    "cell": [Function],
                                    "row": [Function],
                                    "wrapper": [Function],
                                  },
                                  "header": Object {
                                    "cell": [Function],
                                    "row": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Tr",
                                      "render": [Function],
                                    },
                                    "wrapper": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Thead",
                                      "render": [Function],
                                    },
                                  },
                                  "table": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "TableComposable",
                                    "render": [Function],
                                  },
                                }
                              }
                            >
                              <Thead
                                className=""
                              >
                                <TheadBase
                                  className=""
                                  innerRef={null}
                                >
                                  <thead
                                    className=""
                                  >
                                    <HeaderRow
                                      key="0-header-row"
                                      renderers={
                                        Object {
                                          "cell": [Function],
                                          "row": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Tr",
                                            "render": [Function],
                                          },
                                          "wrapper": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Thead",
                                            "render": [Function],
                                          },
                                        }
                                      }
                                      rowData={
                                        Array [
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": true,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": false,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 2,
                                              "onCollapse": [Function],
                                              "onExpand": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": [Function],
                                              "onSort": [Function],
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": Object {},
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "column-0",
                                            "props": Object {
                                              "data-key": 0,
                                              "data-label": "",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": true,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": false,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 2,
                                              "onCollapse": [Function],
                                              "onExpand": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": [Function],
                                              "onSort": [Function],
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": Object {},
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "column-1",
                                            "props": Object {
                                              "data-key": 1,
                                              "data-label": "",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": true,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": false,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 2,
                                              "onCollapse": [Function],
                                              "onExpand": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": [Function],
                                              "onSort": [Function],
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": Object {},
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Name",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "name",
                                            "props": Object {
                                              "data-key": 2,
                                              "data-label": "Name",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": true,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": false,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 2,
                                              "onCollapse": [Function],
                                              "onExpand": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": [Function],
                                              "onSort": [Function],
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": Object {},
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Publish date",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "publish-date",
                                            "props": Object {
                                              "data-key": 3,
                                              "data-label": "Publish date",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": true,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": false,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 2,
                                              "onCollapse": [Function],
                                              "onExpand": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": [Function],
                                              "onSort": [Function],
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": Object {},
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Type",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "type",
                                            "props": Object {
                                              "data-key": 4,
                                              "data-label": "Type",
                                            },
                                          },
                                          Object {
                                            "cell": Object {
                                              "formatters": Array [
                                                [Function],
                                              ],
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "data": undefined,
                                            "extraParams": Object {
                                              "actionResolver": undefined,
                                              "actions": undefined,
                                              "allRowsSelected": true,
                                              "areActionsDisabled": undefined,
                                              "canSelectAll": false,
                                              "contentId": "expanded-content",
                                              "dropdownDirection": "down",
                                              "dropdownPosition": "right",
                                              "expandId": "expandable-toggle",
                                              "firstUserColumnIndex": 2,
                                              "onCollapse": [Function],
                                              "onExpand": undefined,
                                              "onRowEdit": undefined,
                                              "onSelect": [Function],
                                              "onSort": [Function],
                                              "rowLabeledBy": "simple-node",
                                              "selectVariant": "checkbox",
                                              "sortBy": Object {},
                                            },
                                            "header": Object {
                                              "formatters": Array [],
                                              "label": "Synopsis",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            "property": "synopsis",
                                            "props": Object {
                                              "data-key": 5,
                                              "data-label": "Synopsis",
                                            },
                                          },
                                        ]
                                      }
                                      rowIndex={0}
                                    >
                                      <Tr>
                                        <TrBase
                                          innerRef={null}
                                        >
                                          <tr
                                            className=""
                                            data-ouia-component-id="OUIA-Generated-TableRow-1"
                                            data-ouia-component-type="PF4/TableRow"
                                            data-ouia-safe={true}
                                            hidden={false}
                                          >
                                            <HeaderCell
                                              component="td"
                                              data-key={0}
                                              data-label=""
                                              key="0-header"
                                              scope=""
                                            >
                                              <Th
                                                className=""
                                                component="td"
                                                data-key={0}
                                                data-label=""
                                                onMouseEnter={[Function]}
                                                scope=""
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <ThBase
                                                  className=""
                                                  component="td"
                                                  data-key={0}
                                                  data-label=""
                                                  innerRef={null}
                                                  onMouseEnter={[Function]}
                                                  scope=""
                                                  textCenter={false}
                                                  tooltip=""
                                                >
                                                  <td
                                                    className=""
                                                    data-key={0}
                                                    data-label=""
                                                    onMouseEnter={[Function]}
                                                    scope=""
                                                  />
                                                </ThBase>
                                              </Th>
                                            </HeaderCell>
                                            <HeaderCell
                                              data-key={1}
                                              data-label=""
                                              key="1-header"
                                              scope=""
                                            >
                                              <Th
                                                className=""
                                                component="th"
                                                data-key={1}
                                                data-label=""
                                                onMouseEnter={[Function]}
                                                scope=""
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <ThBase
                                                  className=""
                                                  component="th"
                                                  data-key={1}
                                                  data-label=""
                                                  innerRef={null}
                                                  onMouseEnter={[Function]}
                                                  scope=""
                                                  textCenter={false}
                                                  tooltip=""
                                                >
                                                  <th
                                                    className=""
                                                    data-key={1}
                                                    data-label=""
                                                    onMouseEnter={[Function]}
                                                    scope=""
                                                  />
                                                </ThBase>
                                              </Th>
                                            </HeaderCell>
                                            <HeaderCell
                                              aria-sort="none"
                                              className="pf-c-table__sort pf-m-width-15"
                                              data-key={2}
                                              data-label="Name"
                                              key="2-header"
                                              scope="col"
                                            >
                                              <Th
                                                aria-sort="none"
                                                className="pf-c-table__sort pf-m-width-15"
                                                component="th"
                                                data-key={2}
                                                data-label="Name"
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <ThBase
                                                  aria-sort="none"
                                                  className="pf-c-table__sort pf-m-width-15"
                                                  component="th"
                                                  data-key={2}
                                                  data-label="Name"
                                                  innerRef={null}
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                  textCenter={false}
                                                  tooltip=""
                                                >
                                                  <th
                                                    aria-sort="none"
                                                    className="pf-c-table__sort pf-m-width-15"
                                                    data-key={2}
                                                    data-label="Name"
                                                    onMouseEnter={[Function]}
                                                    scope="col"
                                                  >
                                                    <SortColumn
                                                      isSortedBy={false}
                                                      onSort={[Function]}
                                                      sortDirection=""
                                                    >
                                                      <button
                                                        className="pf-c-table__button"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <div
                                                          className="pf-c-table__button-content"
                                                        >
                                                          <TableText>
                                                            <span
                                                              className="pf-c-table__text"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              Name
                                                            </span>
                                                          </TableText>
                                                          <span
                                                            className="pf-c-table__sort-indicator"
                                                          >
                                                            <ArrowsAltVIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 256 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                                                />
                                                              </svg>
                                                            </ArrowsAltVIcon>
                                                          </span>
                                                        </div>
                                                      </button>
                                                    </SortColumn>
                                                  </th>
                                                </ThBase>
                                              </Th>
                                            </HeaderCell>
                                            <HeaderCell
                                              aria-sort="none"
                                              className="pf-c-table__sort pf-m-width-15"
                                              data-key={3}
                                              data-label="Publish date"
                                              key="3-header"
                                              scope="col"
                                            >
                                              <Th
                                                aria-sort="none"
                                                className="pf-c-table__sort pf-m-width-15"
                                                component="th"
                                                data-key={3}
                                                data-label="Publish date"
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <ThBase
                                                  aria-sort="none"
                                                  className="pf-c-table__sort pf-m-width-15"
                                                  component="th"
                                                  data-key={3}
                                                  data-label="Publish date"
                                                  innerRef={null}
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                  textCenter={false}
                                                  tooltip=""
                                                >
                                                  <th
                                                    aria-sort="none"
                                                    className="pf-c-table__sort pf-m-width-15"
                                                    data-key={3}
                                                    data-label="Publish date"
                                                    onMouseEnter={[Function]}
                                                    scope="col"
                                                  >
                                                    <SortColumn
                                                      isSortedBy={false}
                                                      onSort={[Function]}
                                                      sortDirection=""
                                                    >
                                                      <button
                                                        className="pf-c-table__button"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <div
                                                          className="pf-c-table__button-content"
                                                        >
                                                          <TableText>
                                                            <span
                                                              className="pf-c-table__text"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              Publish date
                                                            </span>
                                                          </TableText>
                                                          <span
                                                            className="pf-c-table__sort-indicator"
                                                          >
                                                            <ArrowsAltVIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 256 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                                                />
                                                              </svg>
                                                            </ArrowsAltVIcon>
                                                          </span>
                                                        </div>
                                                      </button>
                                                    </SortColumn>
                                                  </th>
                                                </ThBase>
                                              </Th>
                                            </HeaderCell>
                                            <HeaderCell
                                              aria-sort="none"
                                              className="pf-c-table__sort pf-m-width-15"
                                              data-key={4}
                                              data-label="Type"
                                              key="4-header"
                                              scope="col"
                                            >
                                              <Th
                                                aria-sort="none"
                                                className="pf-c-table__sort pf-m-width-15"
                                                component="th"
                                                data-key={4}
                                                data-label="Type"
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <ThBase
                                                  aria-sort="none"
                                                  className="pf-c-table__sort pf-m-width-15"
                                                  component="th"
                                                  data-key={4}
                                                  data-label="Type"
                                                  innerRef={null}
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                  textCenter={false}
                                                  tooltip=""
                                                >
                                                  <th
                                                    aria-sort="none"
                                                    className="pf-c-table__sort pf-m-width-15"
                                                    data-key={4}
                                                    data-label="Type"
                                                    onMouseEnter={[Function]}
                                                    scope="col"
                                                  >
                                                    <SortColumn
                                                      isSortedBy={false}
                                                      onSort={[Function]}
                                                      sortDirection=""
                                                    >
                                                      <button
                                                        className="pf-c-table__button"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <div
                                                          className="pf-c-table__button-content"
                                                        >
                                                          <TableText>
                                                            <span
                                                              className="pf-c-table__text"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              Type
                                                            </span>
                                                          </TableText>
                                                          <span
                                                            className="pf-c-table__sort-indicator"
                                                          >
                                                            <ArrowsAltVIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 256 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                                                />
                                                              </svg>
                                                            </ArrowsAltVIcon>
                                                          </span>
                                                        </div>
                                                      </button>
                                                    </SortColumn>
                                                  </th>
                                                </ThBase>
                                              </Th>
                                            </HeaderCell>
                                            <HeaderCell
                                              aria-sort="none"
                                              className="pf-c-table__sort"
                                              data-key={5}
                                              data-label="Synopsis"
                                              key="5-header"
                                              scope="col"
                                            >
                                              <Th
                                                aria-sort="none"
                                                className="pf-c-table__sort"
                                                component="th"
                                                data-key={5}
                                                data-label="Synopsis"
                                                onMouseEnter={[Function]}
                                                scope="col"
                                                textCenter={false}
                                                tooltip=""
                                              >
                                                <ThBase
                                                  aria-sort="none"
                                                  className="pf-c-table__sort"
                                                  component="th"
                                                  data-key={5}
                                                  data-label="Synopsis"
                                                  innerRef={null}
                                                  onMouseEnter={[Function]}
                                                  scope="col"
                                                  textCenter={false}
                                                  tooltip=""
                                                >
                                                  <th
                                                    aria-sort="none"
                                                    className="pf-c-table__sort"
                                                    data-key={5}
                                                    data-label="Synopsis"
                                                    onMouseEnter={[Function]}
                                                    scope="col"
                                                  >
                                                    <SortColumn
                                                      isSortedBy={false}
                                                      onSort={[Function]}
                                                      sortDirection=""
                                                    >
                                                      <button
                                                        className="pf-c-table__button"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <div
                                                          className="pf-c-table__button-content"
                                                        >
                                                          <TableText>
                                                            <span
                                                              className="pf-c-table__text"
                                                              onMouseEnter={[Function]}
                                                            >
                                                              Synopsis
                                                            </span>
                                                          </TableText>
                                                          <span
                                                            className="pf-c-table__sort-indicator"
                                                          >
                                                            <ArrowsAltVIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 256 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z"
                                                                />
                                                              </svg>
                                                            </ArrowsAltVIcon>
                                                          </span>
                                                        </div>
                                                      </button>
                                                    </SortColumn>
                                                  </th>
                                                </ThBase>
                                              </Th>
                                            </HeaderCell>
                                          </tr>
                                        </TrBase>
                                      </Tr>
                                    </HeaderRow>
                                  </thead>
                                </TheadBase>
                              </Thead>
                            </BaseHeader>
                          </Component>
                        </ContextHeader>
                      </TableHeader>
                      <Component>
                        <ContextBody
                          className=""
                          headerData={
                            Array [
                              Object {
                                "cell": Object {
                                  "formatters": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "data": undefined,
                                "extraParams": Object {
                                  "actionResolver": undefined,
                                  "actions": undefined,
                                  "allRowsSelected": true,
                                  "areActionsDisabled": undefined,
                                  "canSelectAll": false,
                                  "contentId": "expanded-content",
                                  "dropdownDirection": "down",
                                  "dropdownPosition": "right",
                                  "expandId": "expandable-toggle",
                                  "firstUserColumnIndex": 2,
                                  "onCollapse": [Function],
                                  "onExpand": undefined,
                                  "onRowEdit": undefined,
                                  "onSelect": [Function],
                                  "onSort": [Function],
                                  "rowLabeledBy": "simple-node",
                                  "selectVariant": "checkbox",
                                  "sortBy": Object {},
                                },
                                "header": Object {
                                  "formatters": Array [],
                                  "label": "",
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "property": "column-0",
                                "props": Object {
                                  "data-key": 0,
                                  "data-label": "",
                                },
                              },
                              Object {
                                "cell": Object {
                                  "formatters": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "data": undefined,
                                "extraParams": Object {
                                  "actionResolver": undefined,
                                  "actions": undefined,
                                  "allRowsSelected": true,
                                  "areActionsDisabled": undefined,
                                  "canSelectAll": false,
                                  "contentId": "expanded-content",
                                  "dropdownDirection": "down",
                                  "dropdownPosition": "right",
                                  "expandId": "expandable-toggle",
                                  "firstUserColumnIndex": 2,
                                  "onCollapse": [Function],
                                  "onExpand": undefined,
                                  "onRowEdit": undefined,
                                  "onSelect": [Function],
                                  "onSort": [Function],
                                  "rowLabeledBy": "simple-node",
                                  "selectVariant": "checkbox",
                                  "sortBy": Object {},
                                },
                                "header": Object {
                                  "formatters": Array [],
                                  "label": "",
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "property": "column-1",
                                "props": Object {
                                  "data-key": 1,
                                  "data-label": "",
                                },
                              },
                              Object {
                                "cell": Object {
                                  "formatters": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "data": undefined,
                                "extraParams": Object {
                                  "actionResolver": undefined,
                                  "actions": undefined,
                                  "allRowsSelected": true,
                                  "areActionsDisabled": undefined,
                                  "canSelectAll": false,
                                  "contentId": "expanded-content",
                                  "dropdownDirection": "down",
                                  "dropdownPosition": "right",
                                  "expandId": "expandable-toggle",
                                  "firstUserColumnIndex": 2,
                                  "onCollapse": [Function],
                                  "onExpand": undefined,
                                  "onRowEdit": undefined,
                                  "onSelect": [Function],
                                  "onSort": [Function],
                                  "rowLabeledBy": "simple-node",
                                  "selectVariant": "checkbox",
                                  "sortBy": Object {},
                                },
                                "header": Object {
                                  "formatters": Array [],
                                  "label": "Name",
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "property": "name",
                                "props": Object {
                                  "data-key": 2,
                                  "data-label": "Name",
                                },
                              },
                              Object {
                                "cell": Object {
                                  "formatters": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "data": undefined,
                                "extraParams": Object {
                                  "actionResolver": undefined,
                                  "actions": undefined,
                                  "allRowsSelected": true,
                                  "areActionsDisabled": undefined,
                                  "canSelectAll": false,
                                  "contentId": "expanded-content",
                                  "dropdownDirection": "down",
                                  "dropdownPosition": "right",
                                  "expandId": "expandable-toggle",
                                  "firstUserColumnIndex": 2,
                                  "onCollapse": [Function],
                                  "onExpand": undefined,
                                  "onRowEdit": undefined,
                                  "onSelect": [Function],
                                  "onSort": [Function],
                                  "rowLabeledBy": "simple-node",
                                  "selectVariant": "checkbox",
                                  "sortBy": Object {},
                                },
                                "header": Object {
                                  "formatters": Array [],
                                  "label": "Publish date",
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "property": "publish-date",
                                "props": Object {
                                  "data-key": 3,
                                  "data-label": "Publish date",
                                },
                              },
                              Object {
                                "cell": Object {
                                  "formatters": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "data": undefined,
                                "extraParams": Object {
                                  "actionResolver": undefined,
                                  "actions": undefined,
                                  "allRowsSelected": true,
                                  "areActionsDisabled": undefined,
                                  "canSelectAll": false,
                                  "contentId": "expanded-content",
                                  "dropdownDirection": "down",
                                  "dropdownPosition": "right",
                                  "expandId": "expandable-toggle",
                                  "firstUserColumnIndex": 2,
                                  "onCollapse": [Function],
                                  "onExpand": undefined,
                                  "onRowEdit": undefined,
                                  "onSelect": [Function],
                                  "onSort": [Function],
                                  "rowLabeledBy": "simple-node",
                                  "selectVariant": "checkbox",
                                  "sortBy": Object {},
                                },
                                "header": Object {
                                  "formatters": Array [],
                                  "label": "Type",
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "property": "type",
                                "props": Object {
                                  "data-key": 4,
                                  "data-label": "Type",
                                },
                              },
                              Object {
                                "cell": Object {
                                  "formatters": Array [
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "data": undefined,
                                "extraParams": Object {
                                  "actionResolver": undefined,
                                  "actions": undefined,
                                  "allRowsSelected": true,
                                  "areActionsDisabled": undefined,
                                  "canSelectAll": false,
                                  "contentId": "expanded-content",
                                  "dropdownDirection": "down",
                                  "dropdownPosition": "right",
                                  "expandId": "expandable-toggle",
                                  "firstUserColumnIndex": 2,
                                  "onCollapse": [Function],
                                  "onExpand": undefined,
                                  "onRowEdit": undefined,
                                  "onSelect": [Function],
                                  "onSort": [Function],
                                  "rowLabeledBy": "simple-node",
                                  "selectVariant": "checkbox",
                                  "sortBy": Object {},
                                },
                                "header": Object {
                                  "formatters": Array [],
                                  "label": "Synopsis",
                                  "transforms": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "property": "synopsis",
                                "props": Object {
                                  "data-key": 5,
                                  "data-label": "Synopsis",
                                },
                              },
                            ]
                          }
                          headerRows={null}
                          onRow={[Function]}
                          onRowClick={[Function]}
                          rowKey="secretTableRowKeyId"
                          rows={
                            Array [
                              Object {
                                "cells": Array [
                                  Object {
                                    "title": <ForwardRef
                                      to="/advisories/RHSA-2020:2774"
                                    >
                                      RHSA-2020:2774
                                    </ForwardRef>,
                                  },
                                  Object {
                                    "title": "30 June 2020",
                                  },
                                  Object {
                                    "title": <AdvisoryType
                                      type={3}
                                    />,
                                  },
                                  "Important",
                                ],
                                "id": "RHSA-2020:2774",
                                "isOpen": false,
                                "selected": true,
                              },
                              Object {
                                "cells": Array [
                                  Object {
                                    "title": <DescriptionWithLink
                                      row={
                                        Object {
                                          "attributes": Object {
                                            "advisory_type": 3,
                                            "description": "Kernel-based Virtual.",
                                            "public_date": "2020-06-30T13:38:53Z",
                                            "severity": 3,
                                            "synopsis": "Important",
                                          },
                                          "id": "RHSA-2020:2774",
                                          "type": "advisory",
                                        }
                                      }
                                    />,
                                  },
                                ],
                                "parent": 0,
                              },
                            ]
                          }
                        >
                          <Component
                            className=""
                            headerRows={null}
                            mappedRows={
                              Array [
                                Object {
                                  "cells": Array [
                                    Object {
                                      "title": <ForwardRef
                                        to="/advisories/RHSA-2020:2774"
                                      >
                                        RHSA-2020:2774
                                      </ForwardRef>,
                                    },
                                    Object {
                                      "title": "30 June 2020",
                                    },
                                    Object {
                                      "title": <AdvisoryType
                                        type={3}
                                      />,
                                    },
                                    "Important",
                                  ],
                                  "id": "RHSA-2020:2774",
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": false,
                                  "isLastVisible": false,
                                  "isOpen": false,
                                  "name": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <ForwardRef
                                      to="/advisories/RHSA-2020:2774"
                                    >
                                      RHSA-2020:2774
                                    </ForwardRef>,
                                  },
                                  "publish-date": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": "30 June 2020",
                                  },
                                  "secretTableRowKeyId": "RHSA-2020:2774",
                                  "selected": true,
                                  "synopsis": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": "Important",
                                  },
                                  "type": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <AdvisoryType
                                      type={3}
                                    />,
                                  },
                                },
                                Object {
                                  "cells": Array [
                                    Object {
                                      "title": <DescriptionWithLink
                                        row={
                                          Object {
                                            "attributes": Object {
                                              "advisory_type": 3,
                                              "description": "Kernel-based Virtual.",
                                              "public_date": "2020-06-30T13:38:53Z",
                                              "severity": 3,
                                              "synopsis": "Important",
                                            },
                                            "id": "RHSA-2020:2774",
                                            "type": "advisory",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "isExpanded": false,
                                  "isFirst": false,
                                  "isFirstVisible": false,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "name": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <DescriptionWithLink
                                      row={
                                        Object {
                                          "attributes": Object {
                                            "advisory_type": 3,
                                            "description": "Kernel-based Virtual.",
                                            "public_date": "2020-06-30T13:38:53Z",
                                            "severity": 3,
                                            "synopsis": "Important",
                                          },
                                          "id": "RHSA-2020:2774",
                                          "type": "advisory",
                                        }
                                      }
                                    />,
                                  },
                                  "parent": 0,
                                  "secretTableRowKeyId": 1,
                                },
                              ]
                            }
                            onRow={[Function]}
                            rowKey="secretTableRowKeyId"
                            rows={
                              Array [
                                Object {
                                  "cells": Array [
                                    Object {
                                      "title": <ForwardRef
                                        to="/advisories/RHSA-2020:2774"
                                      >
                                        RHSA-2020:2774
                                      </ForwardRef>,
                                    },
                                    Object {
                                      "title": "30 June 2020",
                                    },
                                    Object {
                                      "title": <AdvisoryType
                                        type={3}
                                      />,
                                    },
                                    "Important",
                                  ],
                                  "id": "RHSA-2020:2774",
                                  "isExpanded": undefined,
                                  "isFirst": true,
                                  "isFirstVisible": true,
                                  "isHeightAuto": false,
                                  "isLast": false,
                                  "isLastVisible": false,
                                  "isOpen": false,
                                  "name": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <ForwardRef
                                      to="/advisories/RHSA-2020:2774"
                                    >
                                      RHSA-2020:2774
                                    </ForwardRef>,
                                  },
                                  "publish-date": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": "30 June 2020",
                                  },
                                  "secretTableRowKeyId": "RHSA-2020:2774",
                                  "selected": true,
                                  "synopsis": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": "Important",
                                  },
                                  "type": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <AdvisoryType
                                      type={3}
                                    />,
                                  },
                                },
                                Object {
                                  "cells": Array [
                                    Object {
                                      "title": <DescriptionWithLink
                                        row={
                                          Object {
                                            "attributes": Object {
                                              "advisory_type": 3,
                                              "description": "Kernel-based Virtual.",
                                              "public_date": "2020-06-30T13:38:53Z",
                                              "severity": 3,
                                              "synopsis": "Important",
                                            },
                                            "id": "RHSA-2020:2774",
                                            "type": "advisory",
                                          }
                                        }
                                      />,
                                    },
                                  ],
                                  "isExpanded": false,
                                  "isFirst": false,
                                  "isFirstVisible": false,
                                  "isHeightAuto": false,
                                  "isLast": true,
                                  "isLastVisible": true,
                                  "name": Object {
                                    "formatters": Array [],
                                    "props": Object {
                                      "isVisible": true,
                                    },
                                    "title": <DescriptionWithLink
                                      row={
                                        Object {
                                          "attributes": Object {
                                            "advisory_type": 3,
                                            "description": "Kernel-based Virtual.",
                                            "public_date": "2020-06-30T13:38:53Z",
                                            "severity": 3,
                                            "synopsis": "Important",
                                          },
                                          "id": "RHSA-2020:2774",
                                          "type": "advisory",
                                        }
                                      }
                                    />,
                                  },
                                  "parent": 0,
                                  "secretTableRowKeyId": 1,
                                },
                              ]
                            }
                          >
                            <BaseBody
                              className=""
                              columns={
                                Array [
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "column-0",
                                    "props": Object {
                                      "data-key": 0,
                                      "data-label": "",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "column-1",
                                    "props": Object {
                                      "data-key": 1,
                                      "data-label": "",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Name",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "name",
                                    "props": Object {
                                      "data-key": 2,
                                      "data-label": "Name",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Publish date",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "publish-date",
                                    "props": Object {
                                      "data-key": 3,
                                      "data-label": "Publish date",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Type",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "type",
                                    "props": Object {
                                      "data-key": 4,
                                      "data-label": "Type",
                                    },
                                  },
                                  Object {
                                    "cell": Object {
                                      "formatters": Array [
                                        [Function],
                                      ],
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "data": undefined,
                                    "extraParams": Object {
                                      "actionResolver": undefined,
                                      "actions": undefined,
                                      "allRowsSelected": true,
                                      "areActionsDisabled": undefined,
                                      "canSelectAll": false,
                                      "contentId": "expanded-content",
                                      "dropdownDirection": "down",
                                      "dropdownPosition": "right",
                                      "expandId": "expandable-toggle",
                                      "firstUserColumnIndex": 2,
                                      "onCollapse": [Function],
                                      "onExpand": undefined,
                                      "onRowEdit": undefined,
                                      "onSelect": [Function],
                                      "onSort": [Function],
                                      "rowLabeledBy": "simple-node",
                                      "selectVariant": "checkbox",
                                      "sortBy": Object {},
                                    },
                                    "header": Object {
                                      "formatters": Array [],
                                      "label": "Synopsis",
                                      "transforms": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "property": "synopsis",
                                    "props": Object {
                                      "data-key": 5,
                                      "data-label": "Synopsis",
                                    },
                                  },
                                ]
                              }
                              headerRows={null}
                              mappedRows={
                                Array [
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <ForwardRef
                                          to="/advisories/RHSA-2020:2774"
                                        >
                                          RHSA-2020:2774
                                        </ForwardRef>,
                                      },
                                      Object {
                                        "title": "30 June 2020",
                                      },
                                      Object {
                                        "title": <AdvisoryType
                                          type={3}
                                        />,
                                      },
                                      "Important",
                                    ],
                                    "id": "RHSA-2020:2774",
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": false,
                                    "isLastVisible": false,
                                    "isOpen": false,
                                    "name": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <ForwardRef
                                        to="/advisories/RHSA-2020:2774"
                                      >
                                        RHSA-2020:2774
                                      </ForwardRef>,
                                    },
                                    "publish-date": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": "30 June 2020",
                                    },
                                    "secretTableRowKeyId": "RHSA-2020:2774",
                                    "selected": true,
                                    "synopsis": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": "Important",
                                    },
                                    "type": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <AdvisoryType
                                        type={3}
                                      />,
                                    },
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <DescriptionWithLink
                                          row={
                                            Object {
                                              "attributes": Object {
                                                "advisory_type": 3,
                                                "description": "Kernel-based Virtual.",
                                                "public_date": "2020-06-30T13:38:53Z",
                                                "severity": 3,
                                                "synopsis": "Important",
                                              },
                                              "id": "RHSA-2020:2774",
                                              "type": "advisory",
                                            }
                                          }
                                        />,
                                      },
                                    ],
                                    "isExpanded": false,
                                    "isFirst": false,
                                    "isFirstVisible": false,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "name": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <DescriptionWithLink
                                        row={
                                          Object {
                                            "attributes": Object {
                                              "advisory_type": 3,
                                              "description": "Kernel-based Virtual.",
                                              "public_date": "2020-06-30T13:38:53Z",
                                              "severity": 3,
                                              "synopsis": "Important",
                                            },
                                            "id": "RHSA-2020:2774",
                                            "type": "advisory",
                                          }
                                        }
                                      />,
                                    },
                                    "parent": 0,
                                    "secretTableRowKeyId": 1,
                                  },
                                ]
                              }
                              onRow={[Function]}
                              renderers={
                                Object {
                                  "body": Object {
                                    "cell": [Function],
                                    "row": [Function],
                                    "wrapper": [Function],
                                  },
                                  "header": Object {
                                    "cell": [Function],
                                    "row": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Tr",
                                      "render": [Function],
                                    },
                                    "wrapper": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Thead",
                                      "render": [Function],
                                    },
                                  },
                                  "table": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "TableComposable",
                                    "render": [Function],
                                  },
                                }
                              }
                              rowKey="secretTableRowKeyId"
                              rows={
                                Array [
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <ForwardRef
                                          to="/advisories/RHSA-2020:2774"
                                        >
                                          RHSA-2020:2774
                                        </ForwardRef>,
                                      },
                                      Object {
                                        "title": "30 June 2020",
                                      },
                                      Object {
                                        "title": <AdvisoryType
                                          type={3}
                                        />,
                                      },
                                      "Important",
                                    ],
                                    "id": "RHSA-2020:2774",
                                    "isExpanded": undefined,
                                    "isFirst": true,
                                    "isFirstVisible": true,
                                    "isHeightAuto": false,
                                    "isLast": false,
                                    "isLastVisible": false,
                                    "isOpen": false,
                                    "name": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <ForwardRef
                                        to="/advisories/RHSA-2020:2774"
                                      >
                                        RHSA-2020:2774
                                      </ForwardRef>,
                                    },
                                    "publish-date": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": "30 June 2020",
                                    },
                                    "secretTableRowKeyId": "RHSA-2020:2774",
                                    "selected": true,
                                    "synopsis": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": "Important",
                                    },
                                    "type": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <AdvisoryType
                                        type={3}
                                      />,
                                    },
                                  },
                                  Object {
                                    "cells": Array [
                                      Object {
                                        "title": <DescriptionWithLink
                                          row={
                                            Object {
                                              "attributes": Object {
                                                "advisory_type": 3,
                                                "description": "Kernel-based Virtual.",
                                                "public_date": "2020-06-30T13:38:53Z",
                                                "severity": 3,
                                                "synopsis": "Important",
                                              },
                                              "id": "RHSA-2020:2774",
                                              "type": "advisory",
                                            }
                                          }
                                        />,
                                      },
                                    ],
                                    "isExpanded": false,
                                    "isFirst": false,
                                    "isFirstVisible": false,
                                    "isHeightAuto": false,
                                    "isLast": true,
                                    "isLastVisible": true,
                                    "name": Object {
                                      "formatters": Array [],
                                      "props": Object {
                                        "isVisible": true,
                                      },
                                      "title": <DescriptionWithLink
                                        row={
                                          Object {
                                            "attributes": Object {
                                              "advisory_type": 3,
                                              "description": "Kernel-based Virtual.",
                                              "public_date": "2020-06-30T13:38:53Z",
                                              "severity": 3,
                                              "synopsis": "Important",
                                            },
                                            "id": "RHSA-2020:2774",
                                            "type": "advisory",
                                          }
                                        }
                                      />,
                                    },
                                    "parent": 0,
                                    "secretTableRowKeyId": 1,
                                  },
                                ]
                              }
                            >
                              <BodyWrapper
                                className=""
                                headerRows={null}
                                mappedRows={
                                  Array [
                                    Object {
                                      "cells": Array [
                                        Object {
                                          "title": <ForwardRef
                                            to="/advisories/RHSA-2020:2774"
                                          >
                                            RHSA-2020:2774
                                          </ForwardRef>,
                                        },
                                        Object {
                                          "title": "30 June 2020",
                                        },
                                        Object {
                                          "title": <AdvisoryType
                                            type={3}
                                          />,
                                        },
                                        "Important",
                                      ],
                                      "id": "RHSA-2020:2774",
                                      "isExpanded": undefined,
                                      "isFirst": true,
                                      "isFirstVisible": true,
                                      "isHeightAuto": false,
                                      "isLast": false,
                                      "isLastVisible": false,
                                      "isOpen": false,
                                      "name": Object {
                                        "formatters": Array [],
                                        "props": Object {
                                          "isVisible": true,
                                        },
                                        "title": <ForwardRef
                                          to="/advisories/RHSA-2020:2774"
                                        >
                                          RHSA-2020:2774
                                        </ForwardRef>,
                                      },
                                      "publish-date": Object {
                                        "formatters": Array [],
                                        "props": Object {
                                          "isVisible": true,
                                        },
                                        "title": "30 June 2020",
                                      },
                                      "secretTableRowKeyId": "RHSA-2020:2774",
                                      "selected": true,
                                      "synopsis": Object {
                                        "formatters": Array [],
                                        "props": Object {
                                          "isVisible": true,
                                        },
                                        "title": "Important",
                                      },
                                      "type": Object {
                                        "formatters": Array [],
                                        "props": Object {
                                          "isVisible": true,
                                        },
                                        "title": <AdvisoryType
                                          type={3}
                                        />,
                                      },
                                    },
                                    Object {
                                      "cells": Array [
                                        Object {
                                          "title": <DescriptionWithLink
                                            row={
                                              Object {
                                                "attributes": Object {
                                                  "advisory_type": 3,
                                                  "description": "Kernel-based Virtual.",
                                                  "public_date": "2020-06-30T13:38:53Z",
                                                  "severity": 3,
                                                  "synopsis": "Important",
                                                },
                                                "id": "RHSA-2020:2774",
                                                "type": "advisory",
                                              }
                                            }
                                          />,
                                        },
                                      ],
                                      "isExpanded": false,
                                      "isFirst": false,
                                      "isFirstVisible": false,
                                      "isHeightAuto": false,
                                      "isLast": true,
                                      "isLastVisible": true,
                                      "name": Object {
                                        "formatters": Array [],
                                        "props": Object {
                                          "isVisible": true,
                                        },
                                        "title": <DescriptionWithLink
                                          row={
                                            Object {
                                              "attributes": Object {
                                                "advisory_type": 3,
                                                "description": "Kernel-based Virtual.",
                                                "public_date": "2020-06-30T13:38:53Z",
                                                "severity": 3,
                                                "synopsis": "Important",
                                              },
                                              "id": "RHSA-2020:2774",
                                              "type": "advisory",
                                            }
                                          }
                                        />,
                                      },
                                      "parent": 0,
                                      "secretTableRowKeyId": 1,
                                    },
                                  ]
                                }
                              >
                                <Tbody
                                  className=""
                                  isExpanded={false}
                                  key="tbody-0"
                                >
                                  <TbodyBase
                                    className=""
                                    innerRef={null}
                                    isExpanded={false}
                                  >
                                    <tbody
                                      className=""
                                      role="rowgroup"
                                    >
                                      <BodyRow
                                        columns={
                                          Array [
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "column-0",
                                              "props": Object {
                                                "data-key": 0,
                                                "data-label": "",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "column-1",
                                              "props": Object {
                                                "data-key": 1,
                                                "data-label": "",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Name",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "name",
                                              "props": Object {
                                                "data-key": 2,
                                                "data-label": "Name",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Publish date",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "publish-date",
                                              "props": Object {
                                                "data-key": 3,
                                                "data-label": "Publish date",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Type",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "type",
                                              "props": Object {
                                                "data-key": 4,
                                                "data-label": "Type",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Synopsis",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "synopsis",
                                              "props": Object {
                                                "data-key": 5,
                                                "data-label": "Synopsis",
                                              },
                                            },
                                          ]
                                        }
                                        key="RHSA-2020:2774-row"
                                        onRow={[Function]}
                                        renderers={
                                          Object {
                                            "cell": [Function],
                                            "row": [Function],
                                            "wrapper": [Function],
                                          }
                                        }
                                        rowData={
                                          Object {
                                            "cells": Array [
                                              Object {
                                                "title": <ForwardRef
                                                  to="/advisories/RHSA-2020:2774"
                                                >
                                                  RHSA-2020:2774
                                                </ForwardRef>,
                                              },
                                              Object {
                                                "title": "30 June 2020",
                                              },
                                              Object {
                                                "title": <AdvisoryType
                                                  type={3}
                                                />,
                                              },
                                              "Important",
                                            ],
                                            "id": "RHSA-2020:2774",
                                            "isExpanded": undefined,
                                            "isFirst": true,
                                            "isFirstVisible": true,
                                            "isHeightAuto": false,
                                            "isLast": false,
                                            "isLastVisible": false,
                                            "isOpen": false,
                                            "name": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <ForwardRef
                                                to="/advisories/RHSA-2020:2774"
                                              >
                                                RHSA-2020:2774
                                              </ForwardRef>,
                                            },
                                            "publish-date": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": "30 June 2020",
                                            },
                                            "secretTableRowKeyId": "RHSA-2020:2774",
                                            "selected": true,
                                            "synopsis": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": "Important",
                                            },
                                            "type": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <AdvisoryType
                                                type={3}
                                              />,
                                            },
                                          }
                                        }
                                        rowIndex={0}
                                        rowKey="RHSA-2020:2774-row"
                                      >
                                        <RowWrapper
                                          className=""
                                          onMouseDown={[Function]}
                                          row={
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "title": <ForwardRef
                                                    to="/advisories/RHSA-2020:2774"
                                                  >
                                                    RHSA-2020:2774
                                                  </ForwardRef>,
                                                },
                                                Object {
                                                  "title": "30 June 2020",
                                                },
                                                Object {
                                                  "title": <AdvisoryType
                                                    type={3}
                                                  />,
                                                },
                                                "Important",
                                              ],
                                              "id": "RHSA-2020:2774",
                                              "isExpanded": undefined,
                                              "isFirst": true,
                                              "isFirstVisible": true,
                                              "isHeightAuto": false,
                                              "isLast": false,
                                              "isLastVisible": false,
                                              "isOpen": false,
                                              "name": Object {
                                                "formatters": Array [],
                                                "props": Object {
                                                  "isVisible": true,
                                                },
                                                "title": <ForwardRef
                                                  to="/advisories/RHSA-2020:2774"
                                                >
                                                  RHSA-2020:2774
                                                </ForwardRef>,
                                              },
                                              "publish-date": Object {
                                                "formatters": Array [],
                                                "props": Object {
                                                  "isVisible": true,
                                                },
                                                "title": "30 June 2020",
                                              },
                                              "secretTableRowKeyId": "RHSA-2020:2774",
                                              "selected": true,
                                              "synopsis": Object {
                                                "formatters": Array [],
                                                "props": Object {
                                                  "isVisible": true,
                                                },
                                                "title": "Important",
                                              },
                                              "type": Object {
                                                "formatters": Array [],
                                                "props": Object {
                                                  "isVisible": true,
                                                },
                                                "title": <AdvisoryType
                                                  type={3}
                                                />,
                                              },
                                            }
                                          }
                                          rowProps={
                                            Object {
                                              "rowIndex": 0,
                                              "rowKey": "RHSA-2020:2774-row",
                                            }
                                          }
                                        >
                                          <Tr
                                            className=""
                                            onMouseDown={[Function]}
                                          >
                                            <TrBase
                                              className=""
                                              innerRef={null}
                                              onMouseDown={[Function]}
                                            >
                                              <tr
                                                className=""
                                                data-ouia-component-id="OUIA-Generated-TableRow-2"
                                                data-ouia-component-type="PF4/TableRow"
                                                data-ouia-safe={true}
                                                hidden={false}
                                                onMouseDown={[Function]}
                                              >
                                                <BodyCell
                                                  className="pf-c-table__toggle"
                                                  data-key={0}
                                                  data-label=""
                                                  isVisible={true}
                                                  key="col-0-row-0"
                                                >
                                                  <Td
                                                    className="pf-c-table__toggle"
                                                    component="td"
                                                    data-key={0}
                                                    dataLabel={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className="pf-c-table__toggle"
                                                      component="td"
                                                      data-key={0}
                                                      dataLabel={null}
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className="pf-c-table__toggle"
                                                        data-key={0}
                                                        data-label={null}
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <CollapseColumn
                                                          aria-labelledby="simple-node0 expandable-toggle0"
                                                          id="expandable-toggle0"
                                                          isOpen={false}
                                                          onToggle={[Function]}
                                                        >
                                                          <Button
                                                            aria-expanded={false}
                                                            aria-label="Details"
                                                            aria-labelledby="simple-node0 expandable-toggle0"
                                                            className=""
                                                            id="expandable-toggle0"
                                                            onClick={[Function]}
                                                            variant="plain"
                                                          >
                                                            <button
                                                              aria-disabled={false}
                                                              aria-expanded={false}
                                                              aria-label="Details"
                                                              aria-labelledby="simple-node0 expandable-toggle0"
                                                              className="pf-c-button pf-m-plain"
                                                              data-ouia-component-id="OUIA-Generated-Button-plain-1"
                                                              data-ouia-component-type="PF4/Button"
                                                              data-ouia-safe={true}
                                                              disabled={false}
                                                              id="expandable-toggle0"
                                                              onClick={[Function]}
                                                              role={null}
                                                              type="button"
                                                            >
                                                              <div
                                                                className="pf-c-table__toggle-icon"
                                                              >
                                                                <AngleDownIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 320 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                                                                    />
                                                                  </svg>
                                                                </AngleDownIcon>
                                                              </div>
                                                            </button>
                                                          </Button>
                                                        </CollapseColumn>
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  className="pf-c-table__check"
                                                  component="td"
                                                  data-key={1}
                                                  data-label=""
                                                  isVisible={true}
                                                  key="col-1-row-0"
                                                >
                                                  <Td
                                                    className="pf-c-table__check"
                                                    component="td"
                                                    data-key={1}
                                                    dataLabel={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className="pf-c-table__check"
                                                      component="td"
                                                      data-key={1}
                                                      dataLabel={null}
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className="pf-c-table__check"
                                                        data-key={1}
                                                        data-label={null}
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <SelectColumn
                                                          aria-label="Select row 0"
                                                          checked={true}
                                                          name="checkrow0"
                                                          onSelect={[Function]}
                                                          selectVariant="checkbox"
                                                        >
                                                          <input
                                                            aria-label="Select row 0"
                                                            checked={true}
                                                            name="checkrow0"
                                                            onChange={[Function]}
                                                            type="checkbox"
                                                          />
                                                        </SelectColumn>
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  data-key={2}
                                                  data-label="Name"
                                                  isVisible={true}
                                                  key="col-2-row-0"
                                                >
                                                  <Td
                                                    className=""
                                                    component="td"
                                                    data-key={2}
                                                    dataLabel="Name"
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      component="td"
                                                      data-key={2}
                                                      dataLabel="Name"
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        data-key={2}
                                                        data-label="Name"
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <Link
                                                          to="/advisories/RHSA-2020:2774"
                                                        >
                                                          <LinkAnchor
                                                            href="/advisories/RHSA-2020:2774"
                                                            navigate={[Function]}
                                                          >
                                                            <a
                                                              href="/advisories/RHSA-2020:2774"
                                                              onClick={[Function]}
                                                            >
                                                              RHSA-2020:2774
                                                            </a>
                                                          </LinkAnchor>
                                                        </Link>
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  data-key={3}
                                                  data-label="Publish date"
                                                  isVisible={true}
                                                  key="col-3-row-0"
                                                >
                                                  <Td
                                                    className=""
                                                    component="td"
                                                    data-key={3}
                                                    dataLabel="Publish date"
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      component="td"
                                                      data-key={3}
                                                      dataLabel="Publish date"
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        data-key={3}
                                                        data-label="Publish date"
                                                        onMouseEnter={[Function]}
                                                      >
                                                        30 June 2020
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  data-key={4}
                                                  data-label="Type"
                                                  isVisible={true}
                                                  key="col-4-row-0"
                                                >
                                                  <Td
                                                    className=""
                                                    component="td"
                                                    data-key={4}
                                                    dataLabel="Type"
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      component="td"
                                                      data-key={4}
                                                      dataLabel="Type"
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        data-key={4}
                                                        data-label="Type"
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <AdvisoryType
                                                          type={3}
                                                        >
                                                          <Flex>
                                                            <div
                                                              className="pf-l-flex"
                                                            >
                                                              <FlexItem
                                                                spacer={
                                                                  Object {
                                                                    "default": "spacerSm",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="pf-m-spacer-sm"
                                                                >
                                                                  <SecurityIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 896 1024"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M861.5,0 L34.5,0 C15.4,0 0,14.3 0,32 L0,452.1 C0,768 387.7,1024 448.5,1024 C509.3,1024 896,768 896,452.2 L896,32 C896,14.3 880.6,0 861.5,0 Z M490.7,768 L405.3,768 C393.5,767.8 384.2,757.5 384,744.7 L384,663.3 C384.2,650.5 393.6,640.3 405.3,640 L490.7,640 C502.5,640.2 511.8,650.5 512,663.3 L512,744.7 L512.1,744.7 C511.8,757.5 502.4,767.8 490.7,768 Z M543.9,162.7 L517.2,514.4 C515.8,530.9 502,544 485.3,544 L410.6,544 C394,544 380.1,531.2 378.7,514.7 L352.1,163 C350.5,144.3 365.3,128.3 384,128.3 L512,128 C530.7,128 545.4,144 543.9,162.7 Z"
                                                                      />
                                                                    </svg>
                                                                  </SecurityIcon>
                                                                </div>
                                                              </FlexItem>
                                                              <FlexItem
                                                                spacer={
                                                                  Object {
                                                                    "default": "spacerSm",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="pf-m-spacer-sm"
                                                                >
                                                                  Security
                                                                </div>
                                                              </FlexItem>
                                                            </div>
                                                          </Flex>
                                                        </AdvisoryType>
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  data-key={5}
                                                  data-label="Synopsis"
                                                  isVisible={true}
                                                  key="col-5-row-0"
                                                >
                                                  <Td
                                                    className=""
                                                    component="td"
                                                    data-key={5}
                                                    dataLabel="Synopsis"
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      component="td"
                                                      data-key={5}
                                                      dataLabel="Synopsis"
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        data-key={5}
                                                        data-label="Synopsis"
                                                        onMouseEnter={[Function]}
                                                      >
                                                        Important
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                              </tr>
                                            </TrBase>
                                          </Tr>
                                        </RowWrapper>
                                      </BodyRow>
                                      <BodyRow
                                        columns={
                                          Array [
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "column-0",
                                              "props": Object {
                                                "data-key": 0,
                                                "data-label": "",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "column-1",
                                              "props": Object {
                                                "data-key": 1,
                                                "data-label": "",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Name",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "name",
                                              "props": Object {
                                                "data-key": 2,
                                                "data-label": "Name",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Publish date",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "publish-date",
                                              "props": Object {
                                                "data-key": 3,
                                                "data-label": "Publish date",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Type",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "type",
                                              "props": Object {
                                                "data-key": 4,
                                                "data-label": "Type",
                                              },
                                            },
                                            Object {
                                              "cell": Object {
                                                "formatters": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "data": undefined,
                                              "extraParams": Object {
                                                "actionResolver": undefined,
                                                "actions": undefined,
                                                "allRowsSelected": true,
                                                "areActionsDisabled": undefined,
                                                "canSelectAll": false,
                                                "contentId": "expanded-content",
                                                "dropdownDirection": "down",
                                                "dropdownPosition": "right",
                                                "expandId": "expandable-toggle",
                                                "firstUserColumnIndex": 2,
                                                "onCollapse": [Function],
                                                "onExpand": undefined,
                                                "onRowEdit": undefined,
                                                "onSelect": [Function],
                                                "onSort": [Function],
                                                "rowLabeledBy": "simple-node",
                                                "selectVariant": "checkbox",
                                                "sortBy": Object {},
                                              },
                                              "header": Object {
                                                "formatters": Array [],
                                                "label": "Synopsis",
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "property": "synopsis",
                                              "props": Object {
                                                "data-key": 5,
                                                "data-label": "Synopsis",
                                              },
                                            },
                                          ]
                                        }
                                        key="1-row"
                                        onRow={[Function]}
                                        renderers={
                                          Object {
                                            "cell": [Function],
                                            "row": [Function],
                                            "wrapper": [Function],
                                          }
                                        }
                                        rowData={
                                          Object {
                                            "cells": Array [
                                              Object {
                                                "title": <DescriptionWithLink
                                                  row={
                                                    Object {
                                                      "attributes": Object {
                                                        "advisory_type": 3,
                                                        "description": "Kernel-based Virtual.",
                                                        "public_date": "2020-06-30T13:38:53Z",
                                                        "severity": 3,
                                                        "synopsis": "Important",
                                                      },
                                                      "id": "RHSA-2020:2774",
                                                      "type": "advisory",
                                                    }
                                                  }
                                                />,
                                              },
                                            ],
                                            "isExpanded": false,
                                            "isFirst": false,
                                            "isFirstVisible": false,
                                            "isHeightAuto": false,
                                            "isLast": true,
                                            "isLastVisible": true,
                                            "name": Object {
                                              "formatters": Array [],
                                              "props": Object {
                                                "isVisible": true,
                                              },
                                              "title": <DescriptionWithLink
                                                row={
                                                  Object {
                                                    "attributes": Object {
                                                      "advisory_type": 3,
                                                      "description": "Kernel-based Virtual.",
                                                      "public_date": "2020-06-30T13:38:53Z",
                                                      "severity": 3,
                                                      "synopsis": "Important",
                                                    },
                                                    "id": "RHSA-2020:2774",
                                                    "type": "advisory",
                                                  }
                                                }
                                              />,
                                            },
                                            "parent": 0,
                                            "secretTableRowKeyId": 1,
                                          }
                                        }
                                        rowIndex={1}
                                        rowKey="1-row"
                                      >
                                        <RowWrapper
                                          className=""
                                          onMouseDown={[Function]}
                                          row={
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "title": <DescriptionWithLink
                                                    row={
                                                      Object {
                                                        "attributes": Object {
                                                          "advisory_type": 3,
                                                          "description": "Kernel-based Virtual.",
                                                          "public_date": "2020-06-30T13:38:53Z",
                                                          "severity": 3,
                                                          "synopsis": "Important",
                                                        },
                                                        "id": "RHSA-2020:2774",
                                                        "type": "advisory",
                                                      }
                                                    }
                                                  />,
                                                },
                                              ],
                                              "isExpanded": false,
                                              "isFirst": false,
                                              "isFirstVisible": false,
                                              "isHeightAuto": false,
                                              "isLast": true,
                                              "isLastVisible": true,
                                              "name": Object {
                                                "formatters": Array [],
                                                "props": Object {
                                                  "isVisible": true,
                                                },
                                                "title": <DescriptionWithLink
                                                  row={
                                                    Object {
                                                      "attributes": Object {
                                                        "advisory_type": 3,
                                                        "description": "Kernel-based Virtual.",
                                                        "public_date": "2020-06-30T13:38:53Z",
                                                        "severity": 3,
                                                        "synopsis": "Important",
                                                      },
                                                      "id": "RHSA-2020:2774",
                                                      "type": "advisory",
                                                    }
                                                  }
                                                />,
                                              },
                                              "parent": 0,
                                              "secretTableRowKeyId": 1,
                                            }
                                          }
                                          rowProps={
                                            Object {
                                              "rowIndex": 1,
                                              "rowKey": "1-row",
                                            }
                                          }
                                        >
                                          <Tr
                                            className=""
                                            isExpanded={false}
                                            onMouseDown={[Function]}
                                          >
                                            <TrBase
                                              className=""
                                              innerRef={null}
                                              isExpanded={false}
                                              onMouseDown={[Function]}
                                            >
                                              <tr
                                                className="pf-c-table__expandable-row"
                                                data-ouia-component-id="OUIA-Generated-TableRow-3"
                                                data-ouia-component-type="PF4/TableRow"
                                                data-ouia-safe={true}
                                                hidden={true}
                                                onMouseDown={[Function]}
                                              >
                                                <BodyCell
                                                  className=""
                                                  data-key={0}
                                                  data-label=""
                                                  isVisible={true}
                                                  key="col-0-row-1"
                                                >
                                                  <Td
                                                    className=""
                                                    component="td"
                                                    data-key={0}
                                                    dataLabel={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      component="td"
                                                      data-key={0}
                                                      dataLabel={null}
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        data-key={0}
                                                        data-label={null}
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <CollapseColumn
                                                          aria-labelledby="simple-node1 expandable-toggle1"
                                                          id="expandable-toggle1"
                                                          onToggle={[Function]}
                                                        />
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  component="td"
                                                  data-key={1}
                                                  data-label=""
                                                  isVisible={true}
                                                  key="col-1-row-1"
                                                >
                                                  <Td
                                                    className=""
                                                    component="td"
                                                    data-key={1}
                                                    dataLabel={null}
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      component="td"
                                                      data-key={1}
                                                      dataLabel={null}
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        data-key={1}
                                                        data-label={null}
                                                        onMouseEnter={[Function]}
                                                      />
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  className=""
                                                  colSpan={4}
                                                  data-key={2}
                                                  data-label="Name"
                                                  id="expanded-content1-2"
                                                  isVisible={true}
                                                  key="col-2-row-1"
                                                  parentId={0}
                                                >
                                                  <Td
                                                    className=""
                                                    colSpan={4}
                                                    component="td"
                                                    data-key={2}
                                                    dataLabel="Name"
                                                    id="expanded-content1-2"
                                                    onMouseEnter={[Function]}
                                                    textCenter={false}
                                                  >
                                                    <TdBase
                                                      className=""
                                                      colSpan={4}
                                                      component="td"
                                                      data-key={2}
                                                      dataLabel="Name"
                                                      id="expanded-content1-2"
                                                      innerRef={null}
                                                      onMouseEnter={[Function]}
                                                      textCenter={false}
                                                    >
                                                      <td
                                                        className=""
                                                        colSpan={4}
                                                        data-key={2}
                                                        data-label="Name"
                                                        id="expanded-content1-2"
                                                        onMouseEnter={[Function]}
                                                      >
                                                        <ExpandableRowContent>
                                                          <div
                                                            className="pf-c-table__expandable-row-content"
                                                          >
                                                            <DescriptionWithLink
                                                              row={
                                                                Object {
                                                                  "attributes": Object {
                                                                    "advisory_type": 3,
                                                                    "description": "Kernel-based Virtual.",
                                                                    "public_date": "2020-06-30T13:38:53Z",
                                                                    "severity": 3,
                                                                    "synopsis": "Important",
                                                                  },
                                                                  "id": "RHSA-2020:2774",
                                                                  "type": "advisory",
                                                                }
                                                              }
                                                            >
                                                              <TextContent>
                                                                <div
                                                                  className="pf-c-content"
                                                                >
                                                                  <Label>
                                                                    <span
                                                                      className="patchman-label"
                                                                    >
                                                                      Description
                                                                    </span>
                                                                  </Label>
                                                                  <Text
                                                                    component="p"
                                                                    style={
                                                                      Object {
                                                                        "whiteSpace": "pre-line",
                                                                      }
                                                                    }
                                                                  >
                                                                    <p
                                                                      className=""
                                                                      data-pf-content={true}
                                                                      style={
                                                                        Object {
                                                                          "whiteSpace": "pre-line",
                                                                        }
                                                                      }
                                                                    >
                                                                      Kernel-based Virtual.
                                                                    </p>
                                                                  </Text>
                                                                  <ExternalLink
                                                                    link="https://access.redhat.com/errata/RHSA-2020:2774"
                                                                    text="View packages and errata at access.redhat.com"
                                                                  >
                                                                    <a
                                                                      href="https://access.redhat.com/errata/RHSA-2020:2774"
                                                                      target="__blank"
                                                                    >
                                                                      <Flex
                                                                        flex={
                                                                          Object {
                                                                            "default": "inlineFlex",
                                                                          }
                                                                        }
                                                                      >
                                                                        <div
                                                                          className="pf-l-flex pf-m-inline-flex"
                                                                        >
                                                                          <FlexItem
                                                                            spacer={
                                                                              Object {
                                                                                "default": "spacerSm",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className="pf-m-spacer-sm"
                                                                            >
                                                                              <ExternalLinkSquareAltIcon
                                                                                color="currentColor"
                                                                                noVerticalAlign={false}
                                                                                size="sm"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  aria-labelledby={null}
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style={
                                                                                    Object {
                                                                                      "verticalAlign": "-0.125em",
                                                                                    }
                                                                                  }
                                                                                  viewBox="0 0 448 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z"
                                                                                  />
                                                                                </svg>
                                                                              </ExternalLinkSquareAltIcon>
                                                                            </div>
                                                                          </FlexItem>
                                                                          <FlexItem
                                                                            spacer={
                                                                              Object {
                                                                                "default": "spacerSm",
                                                                              }
                                                                            }
                                                                          >
                                                                            <div
                                                                              className="pf-m-spacer-sm"
                                                                            >
                                                                              View packages and errata at access.redhat.com
                                                                            </div>
                                                                          </FlexItem>
                                                                        </div>
                                                                      </Flex>
                                                                    </a>
                                                                  </ExternalLink>
                                                                </div>
                                                              </TextContent>
                                                            </DescriptionWithLink>
                                                          </div>
                                                        </ExpandableRowContent>
                                                      </td>
                                                    </TdBase>
                                                  </Td>
                                                </BodyCell>
                                                <BodyCell
                                                  data-key={3}
                                                  data-label="Publish date"
                                                  key="col-3-row-1"
                                                  parentId={0}
                                                />
                                                <BodyCell
                                                  data-key={4}
                                                  data-label="Type"
                                                  key="col-4-row-1"
                                                  parentId={0}
                                                />
                                                <BodyCell
                                                  data-key={5}
                                                  data-label="Synopsis"
                                                  key="col-5-row-1"
                                                  parentId={0}
                                                />
                                              </tr>
                                            </TrBase>
                                          </Tr>
                                        </RowWrapper>
                                      </BodyRow>
                                    </tbody>
                                  </TbodyBase>
                                </Tbody>
                              </BodyWrapper>
                            </BaseBody>
                          </Component>
                        </ContextBody>
                      </Component>
                    </table>
                  </TableComposableBase>
                </TableComposable>
              </Provider>
            </Table>
            <TableFooter
              onPerPageSelect={[Function]}
              onSetPage={[Function]}
              page={1}
              paginationOUIA="bottom-system-advisories-pagination"
              perPage={25}
              totalItems={10}
            >
              <TableToolbar
                isFooter={false}
              >
                <Toolbar
                  className="ins-c-table__toolbar"
                >
                  <GenerateId
                    prefix="pf-random-id-"
                  >
                    <div
                      className="pf-c-toolbar ins-c-table__toolbar"
                      id="pf-random-id-0"
                    >
                       
                      <Pagination
                        className=""
                        defaultToFullPage={false}
                        firstPage={1}
                        isCompact={false}
                        isDisabled={false}
                        itemCount={10}
                        itemsEnd={null}
                        itemsStart={null}
                        offset={0}
                        onFirstClick={[Function]}
                        onLastClick={[Function]}
                        onNextClick={[Function]}
                        onPageInput={[Function]}
                        onPerPageSelect={[Function]}
                        onPreviousClick={[Function]}
                        onSetPage={[Function]}
                        ouiaId="bottom-system-advisories-pagination"
                        ouiaSafe={true}
                        page={1}
                        perPage={25}
                        perPageOptions={
                          Array [
                            Object {
                              "title": "10",
                              "value": 10,
                            },
                            Object {
                              "title": "20",
                              "value": 20,
                            },
                            Object {
                              "title": "50",
                              "value": 50,
                            },
                            Object {
                              "title": "100",
                              "value": 100,
                            },
                          ]
                        }
                        titles={
                          Object {
                            "currPage": "Current page",
                            "items": "",
                            "itemsPerPage": "Items per page",
                            "optionsToggle": "Items per page",
                            "page": "",
                            "paginationTitle": "Pagination",
                            "perPageSuffix": "per page",
                            "toFirstPage": "Go to first page",
                            "toLastPage": "Go to last page",
                            "toNextPage": "Go to next page",
                            "toPreviousPage": "Go to previous page",
                          }
                        }
                        toggleTemplate={[Function]}
                        variant="bottom"
                        widgetId="pagination-options-menu-bottom"
                      >
                        <div
                          className="pf-c-pagination pf-m-bottom"
                          data-ouia-component-id="bottom-system-advisories-pagination"
                          data-ouia-component-type="PF4/Pagination"
                          data-ouia-safe={true}
                          id="pagination-options-menu-bottom-3"
                        >
                          <PaginationOptionsMenu
                            className=""
                            defaultToFullPage={false}
                            dropDirection="up"
                            firstIndex={1}
                            isDisabled={false}
                            itemCount={10}
                            itemsPerPageTitle="Items per page"
                            itemsTitle=""
                            lastIndex={10}
                            lastPage={1}
                            onPerPageSelect={[Function]}
                            optionsToggle="Items per page"
                            page={1}
                            perPage={25}
                            perPageOptions={
                              Array [
                                Object {
                                  "title": "10",
                                  "value": 10,
                                },
                                Object {
                                  "title": "20",
                                  "value": 20,
                                },
                                Object {
                                  "title": "50",
                                  "value": 50,
                                },
                                Object {
                                  "title": "100",
                                  "value": 100,
                                },
                              ]
                            }
                            perPageSuffix="per page"
                            toggleTemplate={[Function]}
                            widgetId="pagination-options-menu-bottom"
                          >
                            <DropdownWithContext
                              autoFocus={true}
                              className=""
                              direction="up"
                              dropdownItems={
                                Array [
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-10"
                                    onClick={[Function]}
                                  >
                                    10
                                     per page
                                  </DropdownItem>,
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-20"
                                    onClick={[Function]}
                                  >
                                    20
                                     per page
                                  </DropdownItem>,
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-50"
                                    onClick={[Function]}
                                  >
                                    50
                                     per page
                                  </DropdownItem>,
                                  <DropdownItem
                                    className=""
                                    component="button"
                                    data-action="per-page-100"
                                    onClick={[Function]}
                                  >
                                    100
                                     per page
                                  </DropdownItem>,
                                ]
                              }
                              isGrouped={false}
                              isOpen={false}
                              isPlain={true}
                              menuAppendTo="inline"
                              onSelect={[Function]}
                              position="left"
                              toggle={
                                <OptionsToggle
                                  firstIndex={1}
                                  isDisabled={false}
                                  isOpen={false}
                                  itemCount={10}
                                  itemsPerPageTitle="Items per page"
                                  itemsTitle=""
                                  lastIndex={10}
                                  onToggle={[Function]}
                                  optionsToggle="Items per page"
                                  parentRef={null}
                                  showToggle={true}
                                  toggleTemplate={[Function]}
                                  widgetId="pagination-options-menu-bottom"
                                />
                              }
                            >
                              <div
                                className="pf-c-options-menu pf-m-top"
                                data-ouia-component-id={17}
                                data-ouia-component-type="PF4/PaginationOptionsMenu"
                                data-ouia-safe={true}
                              >
                                <OptionsToggle
                                  aria-haspopup={true}
                                  firstIndex={1}
                                  getMenuRef={[Function]}
                                  id="pf-dropdown-toggle-id-9"
                                  isDisabled={false}
                                  isOpen={false}
                                  isPlain={true}
                                  itemCount={10}
                                  itemsPerPageTitle="Items per page"
                                  itemsTitle=""
                                  key=".0"
                                  lastIndex={10}
                                  onEnter={[Function]}
                                  onToggle={[Function]}
                                  optionsToggle="Items per page"
                                  parentRef={
                                    Object {
                                      "current": <div
                                        class="pf-c-options-menu pf-m-top"
                                        data-ouia-component-id="17"
                                        data-ouia-component-type="PF4/PaginationOptionsMenu"
                                        data-ouia-safe="true"
                                      >
                                        <div
                                          class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                        >
                                          <span
                                            class="pf-c-options-menu__toggle-text"
                                          >
                                            <b>
                                              1
                                               - 
                                              10
                                            </b>
                                             
                                            of 
                                            <b>
                                              10
                                            </b>
                                             
                                            
                                          </span>
                                          <button
                                            aria-expanded="false"
                                            aria-label="Items per page"
                                            class="  pf-c-options-menu__toggle-button"
                                            id="pagination-options-menu-bottom-toggle-3"
                                            type="button"
                                          >
                                            <span
                                              class="pf-c-options-menu__toggle-button-icon"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </span>
                                          </button>
                                        </div>
                                      </div>,
                                    }
                                  }
                                  showToggle={true}
                                  toggleTemplate={[Function]}
                                  widgetId="pagination-options-menu-bottom"
                                >
                                  <div
                                    className="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                  >
                                    <span
                                      className="pf-c-options-menu__toggle-text"
                                    >
                                      <ToggleTemplate
                                        firstIndex={1}
                                        itemCount={10}
                                        itemsTitle=""
                                        lastIndex={10}
                                      >
                                        <b>
                                          1
                                           - 
                                          10
                                        </b>
                                         
                                        of 
                                        <b>
                                          10
                                        </b>
                                         
                                      </ToggleTemplate>
                                    </span>
                                    <DropdownToggle
                                      aria-label="Items per page"
                                      className="pf-c-options-menu__toggle-button"
                                      id="pagination-options-menu-bottom-toggle-3"
                                      isDisabled={false}
                                      isOpen={false}
                                      onEnter={[Function]}
                                      onToggle={[Function]}
                                      parentRef={
                                        Object {
                                          "current": <div
                                            class="pf-c-options-menu pf-m-top"
                                            data-ouia-component-id="17"
                                            data-ouia-component-type="PF4/PaginationOptionsMenu"
                                            data-ouia-safe="true"
                                          >
                                            <div
                                              class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                            >
                                              <span
                                                class="pf-c-options-menu__toggle-text"
                                              >
                                                <b>
                                                  1
                                                   - 
                                                  10
                                                </b>
                                                 
                                                of 
                                                <b>
                                                  10
                                                </b>
                                                 
                                                
                                              </span>
                                              <button
                                                aria-expanded="false"
                                                aria-label="Items per page"
                                                class="  pf-c-options-menu__toggle-button"
                                                id="pagination-options-menu-bottom-toggle-3"
                                                type="button"
                                              >
                                                <span
                                                  class="pf-c-options-menu__toggle-button-icon"
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style="vertical-align: -0.125em;"
                                                    viewBox="0 0 320 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </span>
                                              </button>
                                            </div>
                                          </div>,
                                        }
                                      }
                                    >
                                      <Toggle
                                        aria-label="Items per page"
                                        bubbleEvent={false}
                                        className="pf-c-options-menu__toggle-button"
                                        getMenuRef={null}
                                        id="pagination-options-menu-bottom-toggle-3"
                                        isActive={false}
                                        isDisabled={false}
                                        isOpen={false}
                                        isPlain={false}
                                        isPrimary={false}
                                        isSplitButton={false}
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        parentRef={
                                          Object {
                                            "current": <div
                                              class="pf-c-options-menu pf-m-top"
                                              data-ouia-component-id="17"
                                              data-ouia-component-type="PF4/PaginationOptionsMenu"
                                              data-ouia-safe="true"
                                            >
                                              <div
                                                class="pf-c-options-menu__toggle pf-m-plain pf-m-text"
                                              >
                                                <span
                                                  class="pf-c-options-menu__toggle-text"
                                                >
                                                  <b>
                                                    1
                                                     - 
                                                    10
                                                  </b>
                                                   
                                                  of 
                                                  <b>
                                                    10
                                                  </b>
                                                   
                                                  
                                                </span>
                                                <button
                                                  aria-expanded="false"
                                                  aria-label="Items per page"
                                                  class="  pf-c-options-menu__toggle-button"
                                                  id="pagination-options-menu-bottom-toggle-3"
                                                  type="button"
                                                >
                                                  <span
                                                    class="pf-c-options-menu__toggle-button-icon"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style="vertical-align: -0.125em;"
                                                      viewBox="0 0 320 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>,
                                          }
                                        }
                                      >
                                        <button
                                          aria-expanded={false}
                                          aria-label="Items per page"
                                          className="  pf-c-options-menu__toggle-button"
                                          disabled={false}
                                          id="pagination-options-menu-bottom-toggle-3"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          type="button"
                                        >
                                          <span
                                            className="pf-c-options-menu__toggle-button-icon"
                                          >
                                            <CaretDownIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </CaretDownIcon>
                                          </span>
                                        </button>
                                      </Toggle>
                                    </DropdownToggle>
                                  </div>
                                </OptionsToggle>
                              </div>
                            </DropdownWithContext>
                          </PaginationOptionsMenu>
                          <Navigation
                            className=""
                            currPage="Current page"
                            firstPage={1}
                            isCompact={false}
                            isDisabled={false}
                            lastPage={1}
                            onFirstClick={[Function]}
                            onLastClick={[Function]}
                            onNextClick={[Function]}
                            onPageInput={[Function]}
                            onPreviousClick={[Function]}
                            onSetPage={[Function]}
                            page={1}
                            pagesTitle=""
                            paginationTitle="Pagination"
                            perPage={25}
                            toFirstPage="Go to first page"
                            toLastPage="Go to last page"
                            toNextPage="Go to next page"
                            toPreviousPage="Go to previous page"
                          >
                            <nav
                              aria-label="Pagination"
                              className="pf-c-pagination__nav"
                            >
                              <div
                                className="pf-c-pagination__nav-control pf-m-first"
                              >
                                <Button
                                  aria-label="Go to first page"
                                  data-action="first"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <button
                                    aria-disabled={true}
                                    aria-label="Go to first page"
                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                    data-action="first"
                                    data-ouia-component-id={18}
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    tabIndex={null}
                                    type="button"
                                  >
                                    <AngleDoubleLeftIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 448 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
                                          transform=""
                                        />
                                      </svg>
                                    </AngleDoubleLeftIcon>
                                  </button>
                                </Button>
                              </div>
                              <div
                                className="pf-c-pagination__nav-control"
                              >
                                <Button
                                  aria-label="Go to previous page"
                                  data-action="previous"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <button
                                    aria-disabled={true}
                                    aria-label="Go to previous page"
                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                    data-action="previous"
                                    data-ouia-component-id={19}
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    tabIndex={null}
                                    type="button"
                                  >
                                    <AngleLeftIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 256 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                                          transform=""
                                        />
                                      </svg>
                                    </AngleLeftIcon>
                                  </button>
                                </Button>
                              </div>
                              <div
                                className="pf-c-pagination__nav-page-select"
                              >
                                <input
                                  aria-label="Current page"
                                  className="pf-c-form-control"
                                  disabled={true}
                                  max={1}
                                  min={1}
                                  onChange={[Function]}
                                  onKeyDown={[Function]}
                                  type="number"
                                  value={1}
                                />
                                <span
                                  aria-hidden="true"
                                >
                                  of 
                                  1
                                </span>
                              </div>
                              <div
                                className="pf-c-pagination__nav-control"
                              >
                                <Button
                                  aria-label="Go to next page"
                                  data-action="next"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <button
                                    aria-disabled={true}
                                    aria-label="Go to next page"
                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                    data-action="next"
                                    data-ouia-component-id={20}
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    tabIndex={null}
                                    type="button"
                                  >
                                    <AngleRightIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 256 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                          transform=""
                                        />
                                      </svg>
                                    </AngleRightIcon>
                                  </button>
                                </Button>
                              </div>
                              <div
                                className="pf-c-pagination__nav-control pf-m-last"
                              >
                                <Button
                                  aria-label="Go to last page"
                                  data-action="last"
                                  isDisabled={true}
                                  onClick={[Function]}
                                  variant="plain"
                                >
                                  <button
                                    aria-disabled={true}
                                    aria-label="Go to last page"
                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                    data-action="last"
                                    data-ouia-component-id={21}
                                    data-ouia-component-type="PF4/Button"
                                    data-ouia-safe={true}
                                    disabled={true}
                                    onClick={[Function]}
                                    tabIndex={null}
                                    type="button"
                                  >
                                    <AngleDoubleRightIcon
                                      color="currentColor"
                                      noVerticalAlign={false}
                                      size="sm"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        aria-labelledby={null}
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style={
                                          Object {
                                            "verticalAlign": "-0.125em",
                                          }
                                        }
                                        viewBox="0 0 448 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
                                          transform=""
                                        />
                                      </svg>
                                    </AngleDoubleRightIcon>
                                  </button>
                                </Button>
                              </div>
                            </nav>
                          </Navigation>
                        </div>
                      </Pagination>
                      <ToolbarChipGroupContent
                        chipGroupContentRef={
                          Object {
                            "current": <div
                              class="pf-c-toolbar__content pf-m-hidden"
                              hidden=""
                            >
                              <div
                                class="pf-c-toolbar__group"
                              />
                            </div>,
                          }
                        }
                        clearFiltersButtonText="Clear all filters"
                        collapseListedFiltersBreakpoint="lg"
                        isExpanded={false}
                        numberOfFilters={0}
                        showClearFiltersButton={false}
                      >
                        <div
                          className="pf-c-toolbar__content pf-m-hidden"
                          hidden={true}
                        >
                          <ForwardRef
                            className=""
                          >
                            <ToolbarGroupWithRef
                              className=""
                              innerRef={null}
                            >
                              <div
                                className="pf-c-toolbar__group"
                              />
                            </ToolbarGroupWithRef>
                          </ForwardRef>
                        </div>
                      </ToolbarChipGroupContent>
                    </div>
                  </GenerateId>
                </Toolbar>
              </TableToolbar>
            </TableFooter>
          </TableView>
        </SystemAdvisories>
      </withRouter(SystemAdvisories)>
    </Router>
  </BrowserRouter>
</Provider>
`;
